{"version":3,"file":"js/5653.js","mappings":"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","sources":["webpack:///../node_modules/html-to-image/es/util.js","webpack:///../node_modules/html-to-image/es/getBlobFromURL.js","webpack:///../node_modules/html-to-image/es/clonePseudoElements.js","webpack:///../node_modules/html-to-image/es/cloneNode.js","webpack:///../node_modules/html-to-image/es/embedResources.js","webpack:///../node_modules/html-to-image/es/embedImages.js","webpack:///../node_modules/html-to-image/es/embedWebFonts.js","webpack:///../node_modules/html-to-image/es/index.js","webpack:///../node_modules/html-to-image/es/applyStyleWithOptions.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\nexport function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function parseDataUrlContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport const uuid = (function uuid() {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport const delay = (ms) => (args) => new Promise((resolve) => setTimeout(() => resolve(args), ms));\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n    return parseFloat(val.replace('px', ''));\n}\nexport function getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\nexport function canvasToBlob(canvas) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => canvas.toBlob(resolve));\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], { type: 'image/png' }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'sync';\n        img.src = url;\n    });\n}\nexport function svgToDataURL(svg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve()\n            .then(() => new XMLSerializer().serializeToString(svg))\n            .then(encodeURIComponent)\n            .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n    });\n}\nexport function nodeToDataURL(node, width, height) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const xmlns = 'http://www.w3.org/2000/svg';\n        const svg = document.createElementNS(xmlns, 'svg');\n        const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n        svg.setAttribute('width', `${width}`);\n        svg.setAttribute('height', `${height}`);\n        svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n        foreignObject.setAttribute('width', '100%');\n        foreignObject.setAttribute('height', '100%');\n        foreignObject.setAttribute('x', '0');\n        foreignObject.setAttribute('y', '0');\n        foreignObject.setAttribute('externalResourcesRequired', 'true');\n        svg.appendChild(foreignObject);\n        foreignObject.appendChild(node);\n        return svgToDataURL(svg);\n    });\n}\n//# sourceMappingURL=util.js.map","import { parseDataUrlContent } from './util';\nconst cache = {};\nfunction getCacheKey(url) {\n    let key = url.replace(/\\?.*/, '');\n    // font resourse\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return key;\n}\nexport function getBlobFromURL(url, options) {\n    const cacheKey = getCacheKey(url);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // cache bypass so we dont have CORS issues with cached images\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n    const failed = (reason) => {\n        let placeholder = '';\n        if (options.imagePlaceholder) {\n            const parts = options.imagePlaceholder.split(/,/);\n            if (parts && parts[1]) {\n                placeholder = parts[1];\n            }\n        }\n        let msg = `Failed to fetch resource: ${url}`;\n        if (reason) {\n            msg = typeof reason === 'string' ? reason : reason.message;\n        }\n        if (msg) {\n            console.error(msg);\n        }\n        return {\n            blob: placeholder,\n            contentType: '',\n        };\n    };\n    const deferred = window\n        .fetch(url)\n        .then((res) => \n    // eslint-disable-next-line promise/no-nesting\n    res.blob().then((blob) => ({\n        blob,\n        contentType: res.headers.get('Content-Type') || '',\n    })))\n        .then(({ blob, contentType }) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({\n            contentType,\n            blob: reader.result,\n        });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    }))\n        .then(({ blob, contentType }) => ({\n        contentType,\n        blob: parseDataUrlContent(blob),\n    }))\n        // on failed\n        .catch(failed);\n    // cache result\n    cache[cacheKey] = deferred;\n    return deferred;\n}\n//# sourceMappingURL=getBlobFromURL.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clonePseudoElements.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\nfunction cloneCanvasElement(node) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dataURL = node.toDataURL();\n        if (dataURL === 'data:,') {\n            return Promise.resolve(node.cloneNode(false));\n        }\n        return createImage(dataURL);\n    });\n}\nfunction cloneVideoElement(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve(node.poster)\n            .then((url) => getBlobFromURL(url, options))\n            .then((data) => makeDataUrl(data.blob, getMimeType(node.poster) || data.contentType))\n            .then((dataURL) => createImage(dataURL));\n    });\n}\nfunction cloneSingleNode(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (node instanceof HTMLCanvasElement) {\n            return cloneCanvasElement(node);\n        }\n        if (node instanceof HTMLVideoElement && node.poster) {\n            return cloneVideoElement(node, options);\n        }\n        return Promise.resolve(node.cloneNode(false));\n    });\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nfunction cloneChildren(nativeNode, clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = isSlotElement(nativeNode) && nativeNode.assignedNodes\n            ? toArray(nativeNode.assignedNodes())\n            : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n        if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n            return Promise.resolve(clonedNode);\n        }\n        return children\n            .reduce((deferred, child) => deferred\n            // eslint-disable-next-line no-use-before-define\n            .then(() => cloneNode(child, options))\n            .then((clonedChild) => {\n            // eslint-disable-next-line promise/always-return\n            if (clonedChild) {\n                clonedNode.appendChild(clonedChild);\n            }\n        }), Promise.resolve())\n            .then(() => clonedNode);\n    });\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const source = window.getComputedStyle(nativeNode);\n    const target = clonedNode.style;\n    if (!target) {\n        return;\n    }\n    if (source.cssText) {\n        target.cssText = source.cssText;\n    }\n    else {\n        toArray(source).forEach((name) => {\n            target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve()\n            .then(() => cloneCSSStyle(nativeNode, clonedNode))\n            .then(() => clonePseudoElements(nativeNode, clonedNode))\n            .then(() => cloneInputValue(nativeNode, clonedNode))\n            .then(() => clonedNode);\n    });\n}\nexport function cloneNode(node, options, isRoot) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isRoot && options.filter && !options.filter(node)) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(node)\n            .then((clonedNode) => cloneSingleNode(clonedNode, options))\n            .then((clonedNode) => cloneChildren(node, clonedNode, options))\n            .then((clonedNode) => decorate(node, clonedNode));\n    });\n}\n//# sourceMappingURL=cloneNode.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { getMimeType, isDataUrl, makeDataUrl, resolveUrl } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"'])([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nexport function toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const result = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        result.push(url);\n        return raw;\n    });\n    return result.filter((url) => !isDataUrl(url));\n}\nexport function embed(cssText, resourceURL, baseURL, options, get) {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n    return Promise.resolve(resolvedURL)\n        .then((url) => get ? get(url) : getBlobFromURL(url, options))\n        .then((data) => {\n        if (typeof data === 'string') {\n            return makeDataUrl(data, getMimeType(resourceURL));\n        }\n        return makeDataUrl(data.blob, getMimeType(resourceURL) || data.contentType);\n    })\n        .then((dataURL) => cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`))\n        .then((content) => content, () => resolvedURL);\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport function embedResources(cssText, baseUrl, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!shouldEmbed(cssText)) {\n            return Promise.resolve(cssText);\n        }\n        const filteredCSSText = filterPreferredFontFormat(cssText, options);\n        return Promise.resolve(filteredCSSText)\n            .then(parseURLs)\n            .then((urls) => urls.reduce((deferred, url) => \n        // eslint-disable-next-line promise/no-nesting\n        deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText)));\n    });\n}\n//# sourceMappingURL=embedResources.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\nfunction embedBackground(clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n        if (!background) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(background)\n            .then((cssString) => embedResources(cssString, null, options))\n            .then((cssString) => {\n            clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n            return clonedNode;\n        });\n    });\n}\nfunction embedImageNode(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) &&\n            !(clonedNode instanceof SVGImageElement &&\n                !isDataUrl(clonedNode.href.baseVal))) {\n            return Promise.resolve(clonedNode);\n        }\n        const src = clonedNode instanceof HTMLImageElement\n            ? clonedNode.src\n            : clonedNode.href.baseVal;\n        return Promise.resolve(src)\n            .then((url) => getBlobFromURL(url, options))\n            .then((data) => makeDataUrl(data.blob, getMimeType(src) || data.contentType))\n            .then((dataURL) => new Promise((resolve, reject) => {\n            clonedNode.onload = resolve;\n            clonedNode.onerror = reject;\n            if (clonedNode instanceof HTMLImageElement) {\n                clonedNode.srcset = '';\n                clonedNode.src = dataURL;\n            }\n            else {\n                clonedNode.href.baseVal = dataURL;\n            }\n        }))\n            .then(() => clonedNode, () => clonedNode);\n    });\n}\nfunction embedChildren(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(clonedNode.childNodes);\n        // eslint-disable-next-line no-use-before-define\n        const deferreds = children.map((child) => embedImages(child, options));\n        return Promise.all(deferreds).then(() => clonedNode);\n    });\n}\nexport function embedImages(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(clonedNode)\n            .then((node) => embedBackground(node, options))\n            .then((node) => embedImageNode(node, options))\n            .then((node) => embedChildren(node, options));\n    });\n}\n//# sourceMappingURL=embedImages.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nconst cssFetchCache = {};\nfunction fetchCSS(url) {\n    const cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const deferred = window.fetch(url).then((res) => ({\n        url,\n        cssText: res.text(),\n    }));\n    cssFetchCache[url] = deferred;\n    return deferred;\n}\nfunction embedFonts(meta) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return meta.cssText.then((raw) => {\n            let cssText = raw;\n            const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n            const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n            const loadFonts = fontLocs.map((location) => {\n                let url = location.replace(regexUrl, '$1');\n                if (!url.startsWith('https://')) {\n                    url = new URL(url, meta.url).href;\n                }\n                // eslint-disable-next-line promise/no-nesting\n                return window\n                    .fetch(url)\n                    .then((res) => res.blob())\n                    .then((blob) => new Promise((resolve, reject) => {\n                    const reader = new FileReader();\n                    reader.onloadend = () => {\n                        // Side Effect\n                        cssText = cssText.replace(location, `url(${reader.result})`);\n                        resolve([location, reader.result]);\n                    };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(blob);\n                }));\n            });\n            // eslint-disable-next-line promise/no-nesting\n            return Promise.all(loadFonts).then(() => cssText);\n        });\n    });\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nfunction getCSSRules(styleSheets) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ret = [];\n        const deferreds = [];\n        // First loop inlines imports\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules).forEach((item, index) => {\n                        if (item.type === CSSRule.IMPORT_RULE) {\n                            let importIndex = index + 1;\n                            const url = item.href;\n                            const deferred = fetchCSS(url)\n                                .then((metadata) => (metadata ? embedFonts(metadata) : ''))\n                                .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                                try {\n                                    sheet.insertRule(rule, rule.startsWith('@import')\n                                        ? (importIndex += 1)\n                                        : sheet.cssRules.length);\n                                }\n                                catch (error) {\n                                    console.error('Error inserting rule from remote css', {\n                                        rule,\n                                        error,\n                                    });\n                                }\n                            }))\n                                .catch((e) => {\n                                console.error('Error loading remote css', e.toString());\n                            });\n                            deferreds.push(deferred);\n                        }\n                    });\n                }\n                catch (e) {\n                    const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                    if (sheet.href != null) {\n                        deferreds.push(fetchCSS(sheet.href)\n                            .then((metadata) => (metadata ? embedFonts(metadata) : ''))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            inline.insertRule(rule, sheet.cssRules.length);\n                        }))\n                            .catch((err) => {\n                            console.error('Error loading remote stylesheet', err.toString());\n                        }));\n                    }\n                    console.error('Error inlining remote css file', e.toString());\n                }\n            }\n        });\n        return Promise.all(deferreds).then(() => {\n            // Second loop parses rules\n            styleSheets.forEach((sheet) => {\n                if ('cssRules' in sheet) {\n                    try {\n                        toArray(sheet.cssRules).forEach((item) => {\n                            ret.push(item);\n                        });\n                    }\n                    catch (e) {\n                        console.error(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                    }\n                }\n            });\n            return ret;\n        });\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nfunction parseWebFontRules(node) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            if (node.ownerDocument == null) {\n                reject(new Error('Provided element is not within a Document'));\n            }\n            resolve(toArray(node.ownerDocument.styleSheets));\n        })\n            .then((styleSheets) => getCSSRules(styleSheets))\n            .then(getWebFontRules);\n    });\n}\nexport function getWebFontCSS(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseWebFontRules(node)\n            .then((rules) => Promise.all(rules.map((rule) => {\n            const baseUrl = rule.parentStyleSheet\n                ? rule.parentStyleSheet.href\n                : null;\n            return embedResources(rule.cssText, baseUrl, options);\n        })))\n            .then((cssTexts) => cssTexts.join('\\n'));\n    });\n}\nexport function embedWebFonts(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (options.fontEmbedCSS != null\n            ? Promise.resolve(options.fontEmbedCSS)\n            : getWebFontCSS(clonedNode, options)).then((cssText) => {\n            const styleNode = document.createElement('style');\n            const sytleContent = document.createTextNode(cssText);\n            styleNode.appendChild(sytleContent);\n            if (clonedNode.firstChild) {\n                clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n            }\n            else {\n                clonedNode.appendChild(styleNode);\n            }\n            return clonedNode;\n        });\n    });\n}\n//# sourceMappingURL=embedWebFonts.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { applyStyleWithOptions } from './applyStyleWithOptions';\nimport { embedWebFonts, getWebFontCSS } from './embedWebFonts';\nimport { getNodeWidth, getNodeHeight, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, } from './util';\nfunction getImageSize(node, options = {}) {\n    const width = options.width || getNodeWidth(node);\n    const height = options.height || getNodeHeight(node);\n    return { width, height };\n}\nexport function toSvg(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(node, options);\n        return Promise.resolve(node)\n            .then((nativeNode) => cloneNode(nativeNode, options, true))\n            .then((clonedNode) => embedWebFonts(clonedNode, options))\n            .then((clonedNode) => embedImages(clonedNode, options))\n            .then((clonedNode) => applyStyleWithOptions(clonedNode, options))\n            .then((clonedNode) => nodeToDataURL(clonedNode, width, height));\n    });\n}\nconst dimensionCanvasLimit = 16384; // as per https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nfunction checkCanvasDimensions(canvas) {\n    if (canvas.width > dimensionCanvasLimit ||\n        canvas.height > dimensionCanvasLimit) {\n        if (canvas.width > dimensionCanvasLimit &&\n            canvas.height > dimensionCanvasLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= dimensionCanvasLimit / canvas.width;\n                canvas.width = dimensionCanvasLimit;\n            }\n            else {\n                canvas.width *= dimensionCanvasLimit / canvas.height;\n                canvas.height = dimensionCanvasLimit;\n            }\n        }\n        else if (canvas.width > dimensionCanvasLimit) {\n            canvas.height *= dimensionCanvasLimit / canvas.width;\n            canvas.width = dimensionCanvasLimit;\n        }\n        else {\n            canvas.width *= dimensionCanvasLimit / canvas.height;\n            canvas.height = dimensionCanvasLimit;\n        }\n    }\n}\nexport function toCanvas(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toSvg(node, options)\n            .then(createImage)\n            .then((img) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = options.pixelRatio || getPixelRatio();\n            const { width, height } = getImageSize(node, options);\n            const canvasWidth = options.canvasWidth || width;\n            const canvasHeight = options.canvasHeight || height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            if (!options.skipAutoScale) {\n                checkCanvasDimensions(canvas);\n            }\n            canvas.style.width = `${canvasWidth}`;\n            canvas.style.height = `${canvasHeight}`;\n            if (options.backgroundColor) {\n                context.fillStyle = options.backgroundColor;\n                context.fillRect(0, 0, canvas.width, canvas.height);\n            }\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n            return canvas;\n        });\n    });\n}\nexport function toPixelData(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(node, options);\n        return toCanvas(node, options).then((canvas) => {\n            const ctx = canvas.getContext('2d');\n            return ctx.getImageData(0, 0, width, height).data;\n        });\n    });\n}\nexport function toPng(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then((canvas) => canvas.toDataURL());\n    });\n}\nexport function toJpeg(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then((canvas) => canvas.toDataURL('image/jpeg', options.quality || 1));\n    });\n}\nexport function toBlob(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then(canvasToBlob);\n    });\n}\nexport function getFontEmbedCSS(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return getWebFontCSS(node, options);\n    });\n}\n//# sourceMappingURL=index.js.map","export function applyStyleWithOptions(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=applyStyleWithOptions.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","getMimeType","url","extension","match","exec","getExtension","toLowerCase","isDataUrl","search","makeDataUrl","content","mimeType","uuid","counter","Math","random","pow","toString","slice","toArray","arrayLike","arr","i","l","length","push","px","node","styleProperty","val","window","getComputedStyle","getPropertyValue","parseFloat","replace","canvasToBlob","canvas","toBlob","binaryString","atob","toDataURL","split","len","binaryArray","Uint8Array","charCodeAt","Blob","type","createImage","img","Image","onload","onerror","crossOrigin","decoding","src","cache","getBlobFromURL","options","cacheKey","key","test","getCacheKey","cacheBust","Date","getTime","deferred","fetch","res","blob","contentType","headers","get","reader","FileReader","onloadend","readAsDataURL","dataURL","catch","reason","placeholder","imagePlaceholder","parts","msg","message","console","error","clonePseudoElement","nativeNode","clonedNode","pseudo","style","className","err","styleElement","document","createElement","appendChild","selector","cssText","formatCSSText","map","name","getPropertyPriority","join","formatCSSProperties","createTextNode","getPseudoElementStyle","cloneNode","isRoot","this","filter","HTMLCanvasElement","cloneCanvasElement","HTMLVideoElement","poster","data","cloneVideoElement","cloneSingleNode","_a","children","tagName","toUpperCase","assignedNodes","shadowRoot","childNodes","reduce","child","clonedChild","cloneChildren","Element","source","target","forEach","setProperty","cloneCSSStyle","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneInputValue","decorate","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","parseURLs","raw","quotation","shouldEmbed","embedResources","baseUrl","filteredCSSText","str","preferredFontFormat","format","filterPreferredFontFormat","urls","css","resourceURL","baseURL","resolvedURL","location","protocol","doc","implementation","createHTMLDocument","base","a","head","body","href","resolveUrl","escaped","RegExp","toRegex","embedImages","background","cssString","embedBackground","HTMLImageElement","SVGImageElement","baseVal","srcset","embedImageNode","deferreds","all","embedChildren","cssFetchCache","fetchCSS","text","embedFonts","meta","regexUrl","loadFonts","startsWith","URL","parseCSS","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","getWebFontRules","cssRules","rule","CSSRule","FONT_FACE_RULE","getWebFontCSS","ownerDocument","Error","styleSheets","ret","sheet","item","index","IMPORT_RULE","importIndex","metadata","insertRule","inline","find","getCSSRules","parseWebFontRules","rules","parentStyleSheet","cssTexts","getImageSize","width","leftBorder","rightBorder","clientWidth","getNodeWidth","height","topBorder","bottomBorder","clientHeight","getNodeHeight","toSvg","fontEmbedCSS","styleNode","sytleContent","firstChild","insertBefore","embedWebFonts","backgroundColor","manual","Object","keys","applyStyleWithOptions","xmlns","createElementNS","foreignObject","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","nodeToDataURL","dimensionCanvasLimit","toCanvas","context","getContext","ratio","pixelRatio","FINAL_PROCESS","process","env","devicePixelRatio","parseInt","Number","isNaN","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","fillStyle","fillRect","drawImage","toPixelData","getImageData","toPng","toJpeg","quality","getFontEmbedCSS"],"sourceRoot":""}