(self.webpackChunk=self.webpackChunk||[]).push([[6619],{"../node_modules/@ffmpeg/ffmpeg/src/browser/defaultOptions.js":(e,r,s)=>{s("../node_modules/resolve-url/resolve-url.js");const{devDependencies:t}=s("../node_modules/@ffmpeg/ffmpeg/package.json");e.exports={corePath:`https://unpkg.com/@ffmpeg/core@${t["@ffmpeg/core"].substring(1)}/dist/ffmpeg-core.js`}},"../node_modules/@ffmpeg/ffmpeg/src/browser/fetchFile.js":(e,r,s)=>{const t=s("../node_modules/resolve-url/resolve-url.js");e.exports=async e=>{let r=e;if(void 0===e)return new Uint8Array;if("string"==typeof e)if(/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e))r=atob(e.split(",")[1]).split("").map((e=>e.charCodeAt(0)));else{const s=await fetch(t(e));r=await s.arrayBuffer()}else(e instanceof File||e instanceof Blob)&&(r=await(s=e,new Promise(((e,r)=>{const t=new FileReader;t.onload=()=>{e(t.result)},t.onerror=({target:{error:{code:e}}})=>{r(Error(`File could not be read! Code=${e}`))},t.readAsArrayBuffer(s)}))));var s;return new Uint8Array(r)}},"../node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js":(e,r,s)=>{const t=s("../node_modules/resolve-url/resolve-url.js"),{log:o}=s("../node_modules/@ffmpeg/ffmpeg/src/utils/log.js"),n=async(e,r)=>{o("info",`fetch ${e}`);const s=await(await fetch(e)).arrayBuffer();o("info",`${e} file size = ${s.byteLength} bytes`);const t=new Blob([s],{type:r}),n=URL.createObjectURL(t);return o("info",`${e} blob URL = ${n}`),n};e.exports=async({corePath:e})=>{if("string"!=typeof e)throw Error("corePath should be a string!");const r=t(e),s=await n(r,"application/javascript"),a=await n(r.replace("ffmpeg-core.js","ffmpeg-core.wasm"),"application/wasm"),f=await n(r.replace("ffmpeg-core.js","ffmpeg-core.worker.js"),"application/javascript");return"undefined"==typeof createFFmpegCore?new Promise((e=>{const r=document.createElement("script"),t=()=>{r.removeEventListener("load",t),o("info","ffmpeg-core.js script loaded"),e({createFFmpegCore,corePath:s,wasmPath:a,workerPath:f})};r.src=s,r.type="text/javascript",r.addEventListener("load",t),document.getElementsByTagName("head")[0].appendChild(r)})):(o("info","ffmpeg-core.js script is loaded already"),Promise.resolve({createFFmpegCore,corePath:s,wasmPath:a,workerPath:f}))}},"../node_modules/@ffmpeg/ffmpeg/src/browser/index.js":(e,r,s)=>{const t=s("../node_modules/@ffmpeg/ffmpeg/src/browser/defaultOptions.js"),o=s("../node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js"),n=s("../node_modules/@ffmpeg/ffmpeg/src/browser/fetchFile.js");e.exports={defaultOptions:t,getCreateFFmpegCore:o,fetchFile:n}},"../node_modules/@ffmpeg/ffmpeg/src/config.js":e=>{e.exports={defaultArgs:["./ffmpeg","-nostdin","-y"],baseOptions:{log:!1,logger:()=>{},progress:()=>{},corePath:""}}},"../node_modules/@ffmpeg/ffmpeg/src/createFFmpeg.js":(e,r,s)=>{const{defaultArgs:t,baseOptions:o}=s("../node_modules/@ffmpeg/ffmpeg/src/config.js"),{setLogging:n,setCustomLogger:a,log:f}=s("../node_modules/@ffmpeg/ffmpeg/src/utils/log.js"),i=s("../node_modules/@ffmpeg/ffmpeg/src/utils/parseProgress.js"),l=s("../node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js"),{defaultOptions:m,getCreateFFmpegCore:p}=s("../node_modules/@ffmpeg/ffmpeg/src/browser/index.js"),{version:g}=s("../node_modules/@ffmpeg/ffmpeg/package.json"),c=Error("ffmpeg.wasm is not ready, make sure you have completed load().");e.exports=(e={})=>{const{log:r,logger:s,progress:d,...u}={...o,...m,...e};let h=null,w=null,b=null,j=!1,F=d;const y=({type:e,message:r})=>{f(e,r),i(r,F),(e=>{"FFMPEG_END"===e&&null!==b&&(b(),b=null,j=!1)})(r)};return n(r),a(s),f("info",`use ffmpeg.wasm v${g}`),{setProgress:e=>{F=e},setLogger:e=>{a(e)},setLogging:n,load:async()=>{if(f("info","load ffmpeg-core"),null!==h)throw Error("ffmpeg.wasm was loaded, you should not load it again, use ffmpeg.isLoaded() to check next time.");{f("info","loading ffmpeg-core");const{createFFmpegCore:e,corePath:r,workerPath:s,wasmPath:t}=await p(u);h=await e({mainScriptUrlOrBlob:r,printErr:e=>y({type:"fferr",message:e}),print:e=>y({type:"ffout",message:e}),locateFile:(e,r)=>{if("undefined"!=typeof window){if(void 0!==t&&e.endsWith("ffmpeg-core.wasm"))return t;if(void 0!==s&&e.endsWith("ffmpeg-core.worker.js"))return s}return r+e}}),w=h.cwrap("proxy_main","number",["number","number"]),f("info","ffmpeg-core loaded")}},isLoaded:()=>null!==h,run:(...e)=>{if(f("info",`run ffmpeg command: ${e.join(" ")}`),null===h)throw c;if(j)throw Error("ffmpeg.wasm can only run one command at a time");return j=!0,new Promise((r=>{const s=[...t,...e].filter((e=>0!==e.length));b=r,w(...l(h,s))}))},exit:()=>{if(null===h)throw c;j=!1,h.exit(1),h=null,w=null,b=null},FS:(e,...r)=>{if(f("info",`run FS.${e} ${r.map((e=>"string"==typeof e?e:`<${e.length} bytes binary file>`)).join(" ")}`),null===h)throw c;{let s=null;try{s=h.FS[e](...r)}catch(s){throw"readdir"===e?Error(`ffmpeg.FS('readdir', '${r[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`):"readFile"===e?Error(`ffmpeg.FS('readFile', '${r[0]}') error. Check if the path exists`):Error("Oops, something went wrong in FS operation.")}return s}}}}},"../node_modules/@ffmpeg/ffmpeg/src/index.js":(e,r,s)=>{s("../node_modules/regenerator-runtime/runtime.js");const t=s("../node_modules/@ffmpeg/ffmpeg/src/createFFmpeg.js"),{fetchFile:o}=s("../node_modules/@ffmpeg/ffmpeg/src/browser/index.js");e.exports={createFFmpeg:t,fetchFile:o}},"../node_modules/@ffmpeg/ffmpeg/src/utils/log.js":e=>{let r=!1,s=()=>{};e.exports={logging:r,setLogging:e=>{r=e},setCustomLogger:e=>{s=e},log:(e,t)=>{s({type:e,message:t}),r&&console.log(`[${e}] ${t}`)}}},"../node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js":e=>{e.exports=(e,r)=>{const s=e._malloc(r.length*Uint32Array.BYTES_PER_ELEMENT);return r.forEach(((r,t)=>{const o=e._malloc(r.length+1);e.writeAsciiToMemory(r,o),e.setValue(s+Uint32Array.BYTES_PER_ELEMENT*t,o,"i32")})),[r.length,s]}},"../node_modules/@ffmpeg/ffmpeg/src/utils/parseProgress.js":e=>{let r=0,s=0;const t=e=>{const[r,s,t]=e.split(":");return 60*parseFloat(r)*60+60*parseFloat(s)+parseFloat(t)};e.exports=(e,o)=>{if("string"==typeof e)if(e.startsWith("  Duration")){const n=e.split(", ")[0].split(": ")[1],a=t(n);o({duration:a,ratio:s}),(0===r||r>a)&&(r=a)}else if(e.startsWith("frame")||e.startsWith("size")){const n=e.split("time=")[1].split(" ")[0],a=t(n);s=a/r,o({ratio:s,time:a})}else e.startsWith("video:")&&(o({ratio:1}),r=0)}},"../node_modules/resolve-url/resolve-url.js":function(e,r,s){var t,o;t=function(){return function(){var e=arguments.length;if(0===e)throw new Error("resolveUrl requires at least one argument; got none.");var r=document.createElement("base");if(r.href=arguments[0],1===e)return r.href;var s=document.getElementsByTagName("head")[0];s.insertBefore(r,s.firstChild);for(var t,o=document.createElement("a"),n=1;n<e;n++)o.href=arguments[n],t=o.href,r.href=t;return s.removeChild(r),t}},void 0===(o=t.call(r,s,r,e))||(e.exports=o)},"../node_modules/@ffmpeg/ffmpeg/package.json":e=>{"use strict";e.exports=JSON.parse('{"name":"@ffmpeg/ffmpeg","version":"0.10.1","description":"FFmpeg WebAssembly version","main":"src/index.js","types":"src/index.d.ts","directories":{"example":"examples"},"scripts":{"start":"node scripts/server.js","build":"rimraf dist && webpack --config scripts/webpack.config.prod.js","prepublishOnly":"npm run build","lint":"eslint src","wait":"rimraf dist && wait-on http://localhost:3000/dist/ffmpeg.dev.js","test":"npm-run-all -p -r start test:all","test:all":"npm-run-all wait test:browser:ffmpeg test:node:all","test:node":"node --experimental-wasm-threads --experimental-wasm-bulk-memory node_modules/.bin/_mocha --exit --bail --require ./scripts/test-helper.js","test:node:all":"npm run test:node -- ./tests/*.test.js","test:browser":"mocha-headless-chrome -a allow-file-access-from-files -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300000","test:browser:ffmpeg":"npm run test:browser -- -f ./tests/ffmpeg.test.html"},"browser":{"./src/node/index.js":"./src/browser/index.js"},"repository":{"type":"git","url":"git+https://github.com/ffmpegwasm/ffmpeg.wasm.git"},"keywords":["ffmpeg","WebAssembly","video"],"author":"Jerome Wu <jeromewus@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/ffmpegwasm/ffmpeg.wasm/issues"},"engines":{"node":">=12.16.1"},"homepage":"https://github.com/ffmpegwasm/ffmpeg.wasm#readme","dependencies":{"is-url":"^1.2.4","node-fetch":"^2.6.1","regenerator-runtime":"^0.13.7","resolve-url":"^0.2.1"},"devDependencies":{"@babel/core":"^7.12.3","@babel/preset-env":"^7.12.1","@ffmpeg/core":"^0.10.0","@types/emscripten":"^1.39.4","babel-loader":"^8.1.0","chai":"^4.2.0","cors":"^2.8.5","eslint":"^7.12.1","eslint-config-airbnb-base":"^14.1.0","eslint-plugin-import":"^2.22.1","express":"^4.17.1","mocha":"^8.2.1","mocha-headless-chrome":"^2.0.3","npm-run-all":"^4.1.5","wait-on":"^5.3.0","webpack":"^5.3.2","webpack-cli":"^4.1.0","webpack-dev-middleware":"^4.0.0"}}')}}]);
//# sourceMappingURL=bundle.5d92e5fb9bfa585076e9.min.js.map