(self.webpackChunk=self.webpackChunk||[]).push([[6619],{57909:(e,t,r)=>{r(17477);const{devDependencies:s}=r(87825);e.exports={corePath:`https://unpkg.com/@ffmpeg/core@${s["@ffmpeg/core"].substring(1)}/dist/ffmpeg-core.js`}},15470:(e,t,r)=>{const s=r(17477);e.exports=async e=>{let t=e;if(void 0===e)return new Uint8Array;if("string"==typeof e)if(/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e))t=atob(e.split(",")[1]).split("").map((e=>e.charCodeAt(0)));else{const r=await fetch(s(e));t=await r.arrayBuffer()}else(e instanceof File||e instanceof Blob)&&(t=await(r=e,new Promise(((e,t)=>{const s=new FileReader;s.onload=()=>{e(s.result)},s.onerror=({target:{error:{code:e}}})=>{t(Error(`File could not be read! Code=${e}`))},s.readAsArrayBuffer(r)}))));var r;return new Uint8Array(t)}},73707:(e,t,r)=>{const s=r(17477),{log:o}=r(56536),a=async(e,t)=>{o("info",`fetch ${e}`);const r=await(await fetch(e)).arrayBuffer();o("info",`${e} file size = ${r.byteLength} bytes`);const s=new Blob([r],{type:t}),a=URL.createObjectURL(s);return o("info",`${e} blob URL = ${a}`),a};e.exports=async({corePath:e})=>{if("string"!=typeof e)throw Error("corePath should be a string!");const t=s(e),r=await a(t,"application/javascript"),n=await a(t.replace("ffmpeg-core.js","ffmpeg-core.wasm"),"application/wasm"),i=await a(t.replace("ffmpeg-core.js","ffmpeg-core.worker.js"),"application/javascript");return"undefined"==typeof createFFmpegCore?new Promise((e=>{const t=document.createElement("script"),s=()=>{t.removeEventListener("load",s),o("info","ffmpeg-core.js script loaded"),e({createFFmpegCore,corePath:r,wasmPath:n,workerPath:i})};t.src=r,t.type="text/javascript",t.addEventListener("load",s),document.getElementsByTagName("head")[0].appendChild(t)})):(o("info","ffmpeg-core.js script is loaded already"),Promise.resolve({createFFmpegCore,corePath:r,wasmPath:n,workerPath:i}))}},25553:(e,t,r)=>{const s=r(57909),o=r(73707),a=r(15470);e.exports={defaultOptions:s,getCreateFFmpegCore:o,fetchFile:a}},8661:e=>{e.exports={defaultArgs:["./ffmpeg","-nostdin","-y"],baseOptions:{log:!1,logger:()=>{},progress:()=>{},corePath:""}}},55890:(e,t,r)=>{const{defaultArgs:s,baseOptions:o}=r(8661),{setLogging:a,setCustomLogger:n,log:i}=r(56536),l=r(29752),f=r(29940),{defaultOptions:p,getCreateFFmpegCore:c}=r(25553),{version:m}=r(87825),g=Error("ffmpeg.wasm is not ready, make sure you have completed load().");e.exports=(e={})=>{const{log:t,logger:r,progress:d,...u}={...o,...p,...e};let h=null,w=null,b=null,y=!1,F=d;const v=({type:e,message:t})=>{i(e,t),l(t,F),(e=>{"FFMPEG_END"===e&&null!==b&&(b(),b=null,y=!1)})(t)};return a(t),n(r),i("info",`use ffmpeg.wasm v${m}`),{setProgress:e=>{F=e},setLogger:e=>{n(e)},setLogging:a,load:async()=>{if(i("info","load ffmpeg-core"),null!==h)throw Error("ffmpeg.wasm was loaded, you should not load it again, use ffmpeg.isLoaded() to check next time.");{i("info","loading ffmpeg-core");const{createFFmpegCore:e,corePath:t,workerPath:r,wasmPath:s}=await c(u);h=await e({mainScriptUrlOrBlob:t,printErr:e=>v({type:"fferr",message:e}),print:e=>v({type:"ffout",message:e}),locateFile:(e,t)=>{if("undefined"!=typeof window){if(void 0!==s&&e.endsWith("ffmpeg-core.wasm"))return s;if(void 0!==r&&e.endsWith("ffmpeg-core.worker.js"))return r}return t+e}}),w=h.cwrap("proxy_main","number",["number","number"]),i("info","ffmpeg-core loaded")}},isLoaded:()=>null!==h,run:(...e)=>{if(i("info",`run ffmpeg command: ${e.join(" ")}`),null===h)throw g;if(y)throw Error("ffmpeg.wasm can only run one command at a time");return y=!0,new Promise((t=>{const r=[...s,...e].filter((e=>0!==e.length));b=t,w(...f(h,r))}))},exit:()=>{if(null===h)throw g;y=!1,h.exit(1),h=null,w=null,b=null},FS:(e,...t)=>{if(i("info",`run FS.${e} ${t.map((e=>"string"==typeof e?e:`<${e.length} bytes binary file>`)).join(" ")}`),null===h)throw g;{let r=null;try{r=h.FS[e](...t)}catch(r){throw"readdir"===e?Error(`ffmpeg.FS('readdir', '${t[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`):"readFile"===e?Error(`ffmpeg.FS('readFile', '${t[0]}') error. Check if the path exists`):Error("Oops, something went wrong in FS operation.")}return r}}}}},46619:(e,t,r)=>{r(86248);const s=r(55890),{fetchFile:o}=r(25553);e.exports={createFFmpeg:s,fetchFile:o}},56536:e=>{let t=!1,r=()=>{};e.exports={logging:t,setLogging:e=>{t=e},setCustomLogger:e=>{r=e},log:(e,s)=>{r({type:e,message:s}),t&&console.log(`[${e}] ${s}`)}}},29940:e=>{e.exports=(e,t)=>{const r=e._malloc(t.length*Uint32Array.BYTES_PER_ELEMENT);return t.forEach(((t,s)=>{const o=e._malloc(t.length+1);e.writeAsciiToMemory(t,o),e.setValue(r+Uint32Array.BYTES_PER_ELEMENT*s,o,"i32")})),[t.length,r]}},29752:e=>{let t=0,r=0;const s=e=>{const[t,r,s]=e.split(":");return 60*parseFloat(t)*60+60*parseFloat(r)+parseFloat(s)};e.exports=(e,o)=>{if("string"==typeof e)if(e.startsWith("  Duration")){const a=e.split(", ")[0].split(": ")[1],n=s(a);o({duration:n,ratio:r}),(0===t||t>n)&&(t=n)}else if(e.startsWith("frame")||e.startsWith("size")){const a=e.split("time=")[1].split(" ")[0],n=s(a);r=n/t,o({ratio:r,time:n})}else e.startsWith("video:")&&(o({ratio:1}),t=0)}},17477:function(e,t,r){var s,o;s=function(){return function(){var e=arguments.length;if(0===e)throw new Error("resolveUrl requires at least one argument; got none.");var t=document.createElement("base");if(t.href=arguments[0],1===e)return t.href;var r=document.getElementsByTagName("head")[0];r.insertBefore(t,r.firstChild);for(var s,o=document.createElement("a"),a=1;a<e;a++)o.href=arguments[a],s=o.href,t.href=s;return r.removeChild(t),s}},void 0===(o=s.call(t,r,t,e))||(e.exports=o)},87825:e=>{"use strict";e.exports=JSON.parse('{"name":"@ffmpeg/ffmpeg","version":"0.10.1","description":"FFmpeg WebAssembly version","main":"src/index.js","types":"src/index.d.ts","directories":{"example":"examples"},"scripts":{"start":"node scripts/server.js","build":"rimraf dist && webpack --config scripts/webpack.config.prod.js","prepublishOnly":"npm run build","lint":"eslint src","wait":"rimraf dist && wait-on http://localhost:3000/dist/ffmpeg.dev.js","test":"npm-run-all -p -r start test:all","test:all":"npm-run-all wait test:browser:ffmpeg test:node:all","test:node":"node --experimental-wasm-threads --experimental-wasm-bulk-memory node_modules/.bin/_mocha --exit --bail --require ./scripts/test-helper.js","test:node:all":"npm run test:node -- ./tests/*.test.js","test:browser":"mocha-headless-chrome -a allow-file-access-from-files -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300000","test:browser:ffmpeg":"npm run test:browser -- -f ./tests/ffmpeg.test.html"},"browser":{"./src/node/index.js":"./src/browser/index.js"},"repository":{"type":"git","url":"git+https://github.com/ffmpegwasm/ffmpeg.wasm.git"},"keywords":["ffmpeg","WebAssembly","video"],"author":"Jerome Wu <jeromewus@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/ffmpegwasm/ffmpeg.wasm/issues"},"engines":{"node":">=12.16.1"},"homepage":"https://github.com/ffmpegwasm/ffmpeg.wasm#readme","dependencies":{"is-url":"^1.2.4","node-fetch":"^2.6.1","regenerator-runtime":"^0.13.7","resolve-url":"^0.2.1"},"devDependencies":{"@babel/core":"^7.12.3","@babel/preset-env":"^7.12.1","@ffmpeg/core":"^0.10.0","@types/emscripten":"^1.39.4","babel-loader":"^8.1.0","chai":"^4.2.0","cors":"^2.8.5","eslint":"^7.12.1","eslint-config-airbnb-base":"^14.1.0","eslint-plugin-import":"^2.22.1","express":"^4.17.1","mocha":"^8.2.1","mocha-headless-chrome":"^2.0.3","npm-run-all":"^4.1.5","wait-on":"^5.3.0","webpack":"^5.3.2","webpack-cli":"^4.1.0","webpack-dev-middleware":"^4.0.0"}}')}}]);
//# sourceMappingURL=bundle.68301e383b4b2473e04a.min.js.map