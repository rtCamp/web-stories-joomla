/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import{__}from"@googleforcreators/i18n";import{useRef as o,useReducer as r,useMemo as t,useEffect as n}from"@googleforcreators/react";import"prop-types";import a from"styled-components";import{themeHelpers as l,Text as i,THEME_CONSTANTS as s,LoadingSpinner as c}from"@googleforcreators/design-system";const d=a.div.withConfig({displayName:"infiniteScroller__ScrollMessage",componentId:"sc-1gpz4fk-0"})(["width:100%;padding:140px 0 40px;margin:-100px auto 0;text-align:center;p{color:",";}"],(e=>{let{theme:o}=e;return o.colors.fg.tertiary})),m=a.div.withConfig({displayName:"infiniteScroller__LoadingContainer",componentId:"sc-1gpz4fk-1"})(["display:flex;justify-content:center;"]),g=a.span.withConfig({displayName:"infiniteScroller__AriaOnlyAlert",componentId:"sc-1gpz4fk-2"})(l.visuallyHidden),p="loadable",f="loading_internal",u="loading_external",y="complete",S="internal on load",x="external on load",E="all loaded",L="load success",_="can load more",h={[p]:{[S]:f,[x]:u},[f]:{[E]:y,[L]:p},[u]:{[E]:y,[L]:p},[y]:{[_]:p}},w=(e,o)=>h[e][o]||e,InfiniteScroller=a=>{let{allDataLoadedMessage:l=__("No more stories","web-stories"),allDataLoadedAriaMessage:y=__("All stories are loaded","web-stories"),onLoadMore:h,canLoadMore:M,isLoading:b,loadingAriaMessage:A=__("Loading more stories","web-stories")}=a;const v=o(null),z=o(h);z.current=h;const[I,C]=r(w,p),N=t((()=>I===f?A:I===u||M?null:y),[y,A,I,M]);n((()=>{I===f&&z.current()}),[I]),n((()=>{b&&C(x)}),[b]),n((()=>{b||C(M?L:E)}),[b,M]),n((()=>{M&&C(_)}),[M]),n((()=>{if(!v.current)return()=>{};const e=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&C(S)}))}),{rootMargin:"0px",threshold:0}),o=v.current;return e.observe(o),()=>{e.unobserve(o)}}),[]);const k=t((()=>I===u?null:M?e.createElement(m,null,e.createElement(c,{animationSize:50,circleSize:6})):e.createElement(i,{size:s.TYPOGRAPHY.PRESET_SIZES.SMALL},l)),[l,M,I]);return e.createElement(d,{"data-testid":"load-more-on-scroll",ref:v},N&&e.createElement(g,{role:"status"},N),k)};export{InfiniteScroller as default};
