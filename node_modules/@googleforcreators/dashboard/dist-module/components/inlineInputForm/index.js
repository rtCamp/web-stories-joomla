/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import{useRef as t,useState as o,useEffect as r,useFocusOut as n,useCallback as l}from"@googleforcreators/react";import"prop-types";import i,{css as a}from"styled-components";import{Input as c}from"@googleforcreators/design-system";const d=i(c).withConfig({displayName:"inlineInputForm__StyledInput",componentId:"sc-21xnmy-0"})(["div{height:auto;}",""],(e=>{let{$isInverted:t,theme:o}=e;return t&&a(["input{color:",";}"],o.colors.inverted.fg.primary)})),InlineInputForm=i=>{let{noAutoFocus:a,error:c,id:s,isInverted:m,label:p,onEditCancel:u,onEditComplete:f,placeholder:v,value:y}=i;const g=t(null),[h,C]=o(y);r((()=>{C(y)}),[y]),n(g,(()=>{u()}),[u]),r((()=>{!a&&g.current&&g.current.querySelector("input")?.focus()}),[a]);const E=l((e=>{let{target:t}=e;C(t.value)}),[C]),I=l((e=>{let{nativeEvent:t}=e;13===t.keyCode?f(h):27===t.keyCode&&u()}),[h,f,u]);return e.createElement("div",{ref:g},e.createElement(d,{"aria-label":p,id:`${s}`,"data-testid":"inline-input-form",value:h,onKeyDown:I,onChange:E,placeholder:v,hasError:Boolean(c),hint:c,$isInverted:m}))};export{InlineInputForm as default};
