/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("@googleforcreators/react"),t=require("@googleforcreators/tracking"),a=require("../reducer/stories.js"),r=require("../textContent/index.js");require("react"),require("prop-types"),require("../config/context.js");var o=require("../config/useConfig.js");module.exports=()=>{const T=e.useRef(!0),s=e.useMemo((()=>new Map),[]),[S,c]=e.useReducer(a.default,a.defaultStoriesState),{apiCallbacks:E}=o(),y=e.useRef(!1);e.useEffect((()=>(y.current=!0,()=>{y.current=!1})),[]);const l=e.useCallback((async e=>{c({type:a.ACTION_TYPES.LOADING_STORIES,payload:!0});const o=t.getTimeTracker("load_stories");try{const{stories:t,fetchedStoryIds:r,totalPages:S,totalStoriesByStatus:l}=await E.fetchStories(e);if(!y.current)return;T.current&&s.forEach((e=>{e(l)})),T.current=!1,c({type:a.ACTION_TYPES.FETCH_STORIES_SUCCESS,payload:{stories:t,totalPages:S,totalStoriesByStatus:l,fetchedStoryIds:r,page:e.page}})}catch(e){c({type:a.ACTION_TYPES.FETCH_STORIES_FAILURE,payload:{message:r.ERRORS.LOAD_STORIES.MESSAGE,code:e.code}})}finally{c({type:a.ACTION_TYPES.LOADING_STORIES,payload:!1}),o()}}),[E,s]),_=e.useCallback((async e=>{const o=t.getTimeTracker("load_update_story");try{const t=await E.updateStory(e);c({type:a.ACTION_TYPES.UPDATE_STORY,payload:t})}catch(e){c({type:a.ACTION_TYPES.UPDATE_STORY_FAILURE,payload:{message:r.ERRORS.UPDATE_STORY.MESSAGE,code:e.code}})}finally{o()}}),[E]),i=e.useCallback((async e=>{const o=t.getTimeTracker("load_trash_story");try{await E.trashStory(e.id),c({type:a.ACTION_TYPES.TRASH_STORY,payload:{id:e.id,storyStatus:e.status}})}catch(e){c({type:a.ACTION_TYPES.TRASH_STORY_FAILURE,payload:{message:r.ERRORS.DELETE_STORY.MESSAGE,code:e.code}})}finally{o()}}),[E]),R=e.useCallback((async e=>{c({type:a.ACTION_TYPES.CREATING_STORY_FROM_TEMPLATE,payload:!0});try{const t=await E.createStoryFromTemplate(e);c({type:a.ACTION_TYPES.CREATE_STORY_FROM_TEMPLATE_SUCCESS}),window.location=t.editLink}catch(e){c({type:a.ACTION_TYPES.CREATE_STORY_FROM_TEMPLATE_FAILURE,payload:{message:r.ERRORS.CREATE_STORY_FROM_TEMPLATE.MESSAGE,code:e.code}})}finally{c({type:a.ACTION_TYPES.CREATING_STORY_FROM_TEMPLATE,payload:!1})}}),[E]);return{stories:S,api:{duplicateStory:e.useCallback((async e=>{const o=t.getTimeTracker("load_duplicate_story");try{const t=await E.duplicateStory(e);c({type:a.ACTION_TYPES.DUPLICATE_STORY,payload:t})}catch(e){c({type:a.ACTION_TYPES.DUPLICATE_STORY_FAILURE,payload:{message:r.ERRORS.DUPLICATE_STORY.MESSAGE,code:e.code}})}finally{o()}}),[E]),fetchStories:l,createStoryFromTemplate:R,trashStory:i,updateStory:_,addInitialFetchListener:e.useCallback((e=>{const t=Symbol();return s.set(t,e),()=>{s.delete(t)}}),[s])}}};
