/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import{forwardRef as r}from"@googleforcreators/react";import"prop-types";import{THEME_CONSTANTS as t}from"../../../theme/constants/index.js";import{SelectButton as a,Value as o,Label as n,LabelText as l,ChevronWrap as s,StyledChevron as c}from"./components.js";function i(){return i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},i.apply(this,arguments)}var p=r(((r,p)=>{let{activeItemLabel:m,activeItemRenderer:d,disabled:E,dropDownLabel:f,hasError:u,isOpen:S,onSelectClick:O,placeholder:h="",...v}=r;const P=d;return e.createElement(a,i({"aria-haspopup":!0,isOpen:S,disabled:E,hasError:u,onClick:O,ref:p,autoHeight:d},v),d?e.createElement(P,null):e.createElement(o,{forwardedAs:"span",size:t.TYPOGRAPHY.PRESET_SIZES.SMALL,selectValueStylesOverride:v.selectValueStylesOverride},m||h),e.createElement(n,null,f&&e.createElement(l,{forwardedAs:"span",size:t.TYPOGRAPHY.PRESET_SIZES.SMALL},f),e.createElement(s,{isOpen:S},e.createElement(c,null))))}));export{p as default};
