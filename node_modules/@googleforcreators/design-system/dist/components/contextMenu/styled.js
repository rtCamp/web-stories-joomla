/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react"),t=require("prop-types"),r=require("@googleforcreators/react"),o=require("styled-components");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=n(e),s=n(t),i=n(o);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},l.apply(this,arguments)}const p=i.default.div.withConfig({displayName:"styled__Popover",componentId:"sc-l47kav-0"})(["--translate-x:calc(var(--delta-x,0) * 1px);--translate-y:calc(var(--delta-y,0) * 1px);display:",";position:",";z-index:",";transform:translate(var(--translate-x),var(--translate-y));"],(e=>{let{isOpen:t}=e;return t?"block":"none"}),(e=>{let{isInline:t}=e;return t?"relative":"absolute"}),(e=>{let{popoverZIndex:t}=e;return t}));p.defaultProps={popoverZIndex:9991},p.propTypes={popoverZIndex:s.default.number};const d=i.default.div.withConfig({displayName:"styled__Shadow",componentId:"sc-l47kav-1"})(["position:absolute;top:0;right:0;bottom:0;left:0;border-radius:",";box-shadow:0px 4px 4px rgba(0,0,0,0.25);pointer-events:none;"],(e=>{let{theme:t,$isHorizontal:r}=e;return r?t.borders.radius.medium:t.borders.radius.small}));exports.POPOVER_Z_INDEX=9991,exports.Popover=p,exports.Shadow=d,exports.SmartPopover=function SmartPopover(e){const t=r.useCallback((t=>{if(!t)return;const r=t.getBoundingClientRect(),o=window.innerWidth-r.width,n=window.innerHeight-r.height,a=e.isRTL?r.x<0:o<r.x,s=e.isRTL?r.width:-r.width,i={x:a?s:0,y:Math.min(0,n-r.y)};t.style.setProperty("--delta-x",i.x),t.style.setProperty("--delta-y",i.y)}),[e.isRTL]);return e.isOpen?a.default.createElement(p,l({ref:t},e)):null};
