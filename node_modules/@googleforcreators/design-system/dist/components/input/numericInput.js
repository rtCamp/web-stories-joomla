/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");require("prop-types");var t=require("../keyboard/index.js"),n=require("./useNumericInput.js"),r=require("./index.js");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(e);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}exports.NumericInput=e=>{let{allowEmpty:a,isFloat:l,onChange:o,max:s,min:p,value:d="",isIndeterminate:c,...f}=e;const{currentValue:y,handleBlur:m,handleChange:h,handleEsc:v,handleKeyUpAndDown:w,inputRef:b,isIndeterminate:I}=n.useNumericInput({allowEmpty:a,isFloat:l,onChange:o,max:s,min:p,value:d,isIndeterminate:c});return t.useKeyDownEffect(b,{key:["up","alt+up","down","alt+down"],editable:!0},w,[w]),t.useKeyDownEffect(b,{key:["escape"],editable:!0},v,[v]),t.useKeyDownEffect(b,{key:["enter"],editable:!0},m,[m]),u.default.createElement(r.Input,i({ref:b,onBlur:m,onChange:h,value:String(y),isIndeterminate:I&&c},f))};
