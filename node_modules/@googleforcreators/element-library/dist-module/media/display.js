/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import r from"styled-components";import"prop-types";import{useRef as o}from"@googleforcreators/react";import{useUnits as t}from"@googleforcreators/units";import{getMediaSizePositionProps as s}from"@googleforcreators/media";import{useTransformHandler as a}from"@googleforcreators/transform";import{shouldDisplayBorder as l,getResponsiveBorder as i}from"@googleforcreators/masks";import"@googleforcreators/elements";import{elementFillContent as d,elementWithBorder as m,elementWithBackgroundColor as c}from"../shared/shared.js";import"../shared/layerText.js";import n from"../shared/useColorTransformHandler.js";import{getMediaWithScaleCss as p}from"./util.js";const f=r.div.attrs({className:"story-media-display-element"}).withConfig({displayName:"display__Element",componentId:"sc-1el3lyk-0"})([""," "," color:transparent;overflow:hidden;",""],d,(e=>{let{showPlaceholder:r}=e;return r&&"background-color: #C4C4C4;"}),m),h=r.div.withConfig({displayName:"display__Overlay",componentId:"sc-1el3lyk-1"})([""," ",""],d,c);function MediaDisplay(r){let{element:d,mediaRef:m,children:c,previewMode:g,showPlaceholder:y=!1}=r;const{id:u,resource:w,scale:b,focalX:k,focalY:x,border:C,borderRadius:T,width:v,height:E,overlay:j,mask:R}=d,{dataToEditorX:X}=t((e=>({dataToEditorX:e.actions.dataToEditorX}))),_=o();return n({id:u,targetRef:_,expectedStyle:"border-color"}),a(u,(e=>{const r=m.current;if(m.current)if(null===e)r.style.cssText="";else{const{resize:o}=e;if(o&&0!==o[0]&&0!==o[1]){const e=s(w,o[0],o[1],b,k,x);r.style.cssText=p(e),l(d)&&(_.current.style.width=o[0]+C.left+C.right+"px",_.current.style.height=o[1]+C.top+C.bottom+"px")}}})),e.createElement(f,{ref:_,border:i(C,g,X),borderRadius:T,width:v,height:E,mask:R,showPlaceholder:y},c,j&&e.createElement(h,{backgroundColor:j}))}export{MediaDisplay as default};
