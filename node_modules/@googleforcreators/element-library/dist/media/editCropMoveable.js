/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("react");require("prop-types");var t=require("@googleforcreators/react"),r=require("@googleforcreators/units"),o=require("@googleforcreators/media"),a=require("@googleforcreators/moveable"),i=require("@googleforcreators/elements");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=s(e);module.exports=function EditCropMoveable(e){let{setProperties:s,cropBox:n,croppedMedia:c,flip:f,x:d,y:u,width:g,height:h,rotationAngle:p,offsetX:m,offsetY:y,mediaWidth:x,mediaHeight:b}=e;const{editorToDataX:v,editorToDataY:T}=r.useUnits((e=>({editorToDataX:e.actions.editorToDataX,editorToDataY:e.actions.editorToDataY}))),z=t.useRef(),q=t.useRef([0,0,0,0,0,0]),R=i.getTransformFlip(f);return t.useEffect((()=>{z.current?.updateRect()})),l.default.createElement(a.Moveable,{ref:z,className:"crop-moveable",targets:n,origin:!1,resizable:!0,onResize:e=>{let{width:t,height:r,direction:o,delta:a,drag:i}=e;const[s,l]=[i.beforeTranslate[0],i.beforeTranslate[1]],[f,d]=o,u=t-g,p=r-h,m=f<0?u:0,y=f>0?u:0,x=d<0?p:0,b=d>0?p:0;q.current=[s,l,m,y,x,b],n.style.transform=`translate(${s}px, ${l}px)`,c.style.transform=`translate(${-s}px, ${-l}px) ${R??""}`,a[0]&&(n.style.width=`${t}px`),a[1]&&(n.style.height=`${r}px`)},onResizeEnd:()=>{const[e,t,a,i,l,z]=q.current;if(q.current=[0,0,0,0,0,0],n.style.transform="",c.style.transform="",n.style.width="",n.style.height="",0===a&&0===i&&0===l&&0===z)return;const R=g+a+i,$=h+l+z,[D,w]=r.calcRotatedResizeOffset(p,a,i,l,z),F=100*Math.min(x/R,b/$),X=o.getFocalFromOffset(R,x,m+e),Y=o.getFocalFromOffset($,b,y+t);s({x:v(d+D),y:T(u+w),width:v(R),height:T($),resizeWidth:R,resizeHeight:$,scale:F,focalX:f?.horizontal?100-X:X,focalY:f?.vertical?100-Y:Y})},snappable:!0,verticalGuidelines:[d-m,d-m+x],horizontalGuidelines:[u-y,u-y+b]})};
