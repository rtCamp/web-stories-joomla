/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("react"),t=require("styled-components"),r=require("@googleforcreators/react");require("prop-types");var s=require("@googleforcreators/media");require("@googleforcreators/elements");var o=require("../utils/noop.js"),i=require("./util.js"),a=require("./display.js");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=l(e);function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},u.apply(this,arguments)}const n=l(t).default.img.withConfig({displayName:"imageDisplay__Img",componentId:"sc-17guqpr-0"})(["position:absolute;",""],i.mediaWithScale);module.exports=function ImageDisplay(e){let{element:t,box:i,previewMode:l,getProxiedUrl:d,isCurrentResourceProcessing:f=o.noop,isCurrentResourceUploading:g=o.noop}=e;const{resource:p,scale:m,focalX:y,focalY:h}=t,{id:q,alt:v}=p,{width:S,height:z}=i,w=r.useRef();let b="smallest",j=s.getSmallestUrlForWidth(0,p);"cached"===s.resourceList.get(q)?.type&&(b="cached",j=s.resourceList.get(q).url),("fullsize"===s.resourceList.get(q)?.type||f(q)||g(q))&&(b="fullsize",j=p.src),j=d(p,j);const[P,L]=r.useState(b),[E,I]=r.useState(j),O="fullsize"===P?s.calculateSrcSet(p):"",R=s.getMediaSizePositionProps(p,S,z,m,y,h);R.crossOrigin="anonymous",r.useEffect((()=>{let e,t=!0;return"fullsize"!==s.resourceList.get(q)?.type&&p.src?e=setTimeout((async()=>{const e=d(p,p.src);try{const r=await s.preloadImage({src:e,srcset:O});t&&(s.resourceList.set(p.id,{type:"fullsize"}),I(r.currentSrc),L("fullsize"))}catch{}})):I(p.src),()=>{t=!1,clearTimeout(e)}}),[d,p,O,P,q]);const x="fullsize"!==P;return c.default.createElement(a,{element:t,mediaRef:w,showPlaceholder:x,previewMode:l},c.default.createElement(n,u({ref:w,draggable:!1,decoding:"sync",src:E,srcSet:O,alt:v,"data-testid":"imageElement","data-leaf-element":"true"},R)))};
