/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import t from"react";import"prop-types";import{useUnits as e}from"@googleforcreators/units";import"@googleforcreators/elements";import{shouldDisplayBorder as r}from"./utils/elementBorder.js";import o from"./borderedMaskedElement.js";function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},i.apply(this,arguments)}function WithMask(a){let{element:n,fill:d,previewMode:l=!1,responsiveBorder:s,...p}=a;const{dataToEditorX:m,dataToEditorY:f}=e((t=>({dataToEditorX:t.actions.dataToEditorX,dataToEditorY:t.actions.dataToEditorY}))),c=l?"-preview":"",h=m(n.width),g=f(n.height),u=r(n);return t.createElement(o,i({element:n,hasFill:d,getBorderWidth:()=>l?s?.left:n.border?.left,postfix:c,elementWidth:h,elementHeight:g,forceRectangularMask:u},p))}export{WithMask as default};
