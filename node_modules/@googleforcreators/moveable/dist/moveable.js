/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("react"),r=require("@googleforcreators/react"),t=require("react-moveable"),n=require("prop-types"),o=require("./overlay/index.js");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(e),i=a(t),l=a(n);function c(){return c=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},c.apply(this,arguments)}const f=r.forwardRef((function MoveableWithRef(e,r){let{onContextMenu:t,...n}=e;return u.default.createElement(o,{onContextMenu:t,zIndex:10,pointerEvents:"initial",render:e=>{let{container:t}=e;return u.default.createElement(i.default,c({ref:r,container:t},n))}})}));f.propTypes={onContextMenu:l.default.func},module.exports=f;
