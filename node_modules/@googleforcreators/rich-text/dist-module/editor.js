/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import t from"react";import{Editor as e,getDefaultKeyBinding as o,KeyBindingUtil as n}from"draft-js";import"prop-types";import{forwardRef as r,useRef as a,useEffect as s,useUnmount as i,useImperativeHandle as c}from"@googleforcreators/react";import l from"./useRichText.js";import d from"./customInlineDisplay.js";const m=r((function RichTextEditor(r,m){let{content:u,onChange:f}=r;const p=a(null),{state:{editorState:h},actions:{setStateFromContent:C,updateEditorState:g,getHandleKeyCommand:y,getContentFromState:S,handlePastedText:x,clearState:F}}=l();s((()=>{C(u)}),[C,u]),s((()=>{if(!h)return;const t=S(h);f(t)}),[f,S,h]);const T=Boolean(h);if(i(F),c(m,(()=>({focus:()=>p.current?.focus?.(),getNode:()=>p.current?.editorContainer})),[]),!T)return null;const{hasCommandModifier:j}=n,E=y();return t.createElement(e,{ref:p,onChange:g,editorState:h,handleKeyCommand:E,handlePastedText:x,keyBindingFn:function(t){return"KeyA"===t.code&&j(t)?"selectall":o(t)},customStyleFn:d,spellCheck:!0,stripPastedStyles:!0})}));export{m as default};
