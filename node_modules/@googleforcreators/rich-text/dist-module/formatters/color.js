/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{createSolidFromString as t,getHexFromSolid as o,getSolidFromHex as n,generatePatternStyles as r,createSolid as e,isPatternEqual as s}from"@googleforcreators/patterns";import{COLOR as l,MULTIPLE_VALUE as u,NONE as c}from"../customConstants.js";import{getPrefixStylesInSelection as i,togglePrefixStyle as a}from"../styleManipulation.js";import{isStyle as f,getVariable as m}from"./util.js";const p=t=>n(m(t,l)),g=t=>`${l}-${o(t)}`;const y={elementToStyle:function(o){const n="span"===o.tagName.toLowerCase(),r=o.style.color,e=Boolean(r);if(n&&e){const o=t(r);return g(o)}return null},stylesToCSS:function(t){const o=t.find((t=>f(t,l)));if(!o)return null;let n;try{n=p(o)}catch(t){return null}return r(n,"color")},autoFocus:!1,getters:{color:function(t){const o=i(t,l);if(o.length>1)return u;const n=o[0];return n===c?e(0,0,0):p(n)}},setters:{setColor:function(t,o){const n=s(e(0,0,0),o);return a(t,l,(()=>!n),(()=>g(o)))}}};export{y as default};
