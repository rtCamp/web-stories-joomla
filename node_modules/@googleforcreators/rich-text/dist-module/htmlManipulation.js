/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{EditorState as t}from"draft-js";import r from"./formatters/index.js";import e from"./getStateInfo.js";import o from"./customImport.js";import n from"./customExport.js";import{getSelectionForAll as m}from"./util.js";function f(r){const e=o(r),n=t.createWithContent(e),f=m(n.getCurrentContent());return t.forceSelection(n,f)}function i(t,r){for(var e=arguments.length,o=new Array(e>2?e-2:0),m=2;m<e;m++)o[m-2]=arguments[m];const i=r(f(t),...o),s=n(i);return s}const s=t=>function(r){for(var e=arguments.length,o=new Array(e>1?e-1:0),n=1;n<e;n++)o[n-1]=arguments[n];return i(r,t,...o)},c=()=>r.reduce(((t,r)=>{let{setters:e}=r;return{...t,...Object.fromEntries(Object.entries(e).map((t=>{let[r,e]=t;return[r,s(e)]})))}}),{});function u(t){return e(f(t))}export{c as getHTMLFormatters,u as getHTMLInfo,f as getSelectAllStateFromHTML};
