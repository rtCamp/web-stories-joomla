/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useRef as t,useEffect as e,useCallback as r,useMemo as n}from"@googleforcreators/react";import{EditorState as o}from"draft-js";import c from"./formatters/index.js";function u(u,l){const s=t(null),i=t(null);e((()=>{s.current=u,u?u.getSelection().hasFocus&&(i.current=u.getSelection()):i.current=null}),[u]);const f=r((function(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const r=s.current,n=i.current,c=e?o.forceSelection(r,n):r,u=t(c);l(u)}),[l]),a=r((t=>`${t}InSelection`),[]),m=r(((t,e)=>function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return f((e=>t(e,...n)),e)}),[f]);return n((()=>c.reduce(((t,e)=>{let{setters:r,autoFocus:n}=e;return{...t,...Object.fromEntries(Object.entries(r).map((t=>{let[e,r]=t;return[a(e),m(r,n)]})))}}),{})),[a,m])}export{u as default};
