/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useBatchingCallback as e}from"@googleforcreators/react";import"../../constants/fonts.js";import"../../constants/multipleValue.js";import"@googleforcreators/animation";import"uuid";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"react";import"prop-types";import"../story/context.js";import"@googleforcreators/migration";import"@googleforcreators/templates";import"../config/context.js";import"../api/context.js";import"../history/historyProvider.js";import"../history/context.js";import"../story/actions/useSaveStory.js";import"clone-deep";import"../story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../story/storyTriggers/storyTriggersProvider.js";import"../story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../story/storyTriggers/storyEvents/onPageAddedRegister.js";import t from"../story/useStory.js";function r(){const{currentPage:r,addElements:o,updateCurrentPageProperties:s,deleteElementById:n,combineElements:i,addAnimations:a}=t((e=>{let{state:{currentPage:t},actions:{addElements:r,deleteSelectedElements:o,updateCurrentPageProperties:s,deleteElementById:n,combineElements:i,addAnimations:a}}=e;return{currentPage:t,addElements:r,deleteSelectedElements:o,updateCurrentPageProperties:s,deleteElementById:n,combineElements:i,addAnimations:a}})),m=e((function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(0===e.length)return!1;const m=e.find((e=>{let{isBackground:t}=e;return t}));let l=t;if(m){const e=r.elements[0];m.isDefaultBackground?(e.isDefaultBackground||n({elementId:e.id}),s({properties:{backgroundColor:m.backgroundColor}})):(l=t.map((t=>t.targets.includes(m.id)?{...t,targets:[e.id]}:t)),i({firstElement:m,secondId:e.id,shouldRetainAnimations:!1}))}const d=e.filter((e=>{let{isBackground:t}=e;return!t}));return d.length&&o({elements:d}),a({animations:l}),!0}),[o,r,s,i,n,a]);return m}export{r as default};
