/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useEffect as o}from"@googleforcreators/react";import{useSnackbar as r}from"@googleforcreators/design-system";import"react";import"prop-types";import"@googleforcreators/media";import"uuid";import"../../../constants/fonts.js";import"../../../constants/multipleValue.js";import{PROVIDERS as t}from"./providerConfiguration.js";import"@googleforcreators/tracking";import"@googleforcreators/i18n";import"@googleforcreators/templates";import"../../config/context.js";import"../../api/context.js";import"@googleforcreators/animation";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"../../story/context.js";import"@googleforcreators/migration";import"../../history/historyProvider.js";import"../../history/context.js";import"../../story/actions/useSaveStory.js";import"clone-deep";import"../../story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../../story/storyTriggers/storyTriggersProvider.js";import"../../story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../../story/storyTriggers/storyEvents/onPageAddedRegister.js";import"../utils/useFFmpeg.js";import"./api/context.js";import e from"./api/useMedia3pApi.js";function s(s){let{provider:i,selectedProvider:a,categories:p,fetchCategoriesStart:g,fetchCategoriesSuccess:m,fetchCategoriesError:c}=s;const{actions:{listCategories:n}}=e(),{showSnackbar:l}=r();o((()=>{i===a&&t[i].supportsCategories&&!p?.length&&async function(){g({provider:i});try{const{categories:o}=await n({provider:i});m({provider:i,categories:o})}catch(o){c({provider:i}),l({message:t[i].fetchCategoriesErrorMessage,dismissible:!0})}}()}),[l,a,p,i,n,g,m,c])}export{s as default};
