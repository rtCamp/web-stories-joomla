/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{getTypeFromMime as t,preloadVideo as e,seekVideo as i,getVideoLength as h,hasVideoGotAudio as n,getImageDimensions as o,createResource as d}from"@googleforcreators/media";async function a(a){const{src:l,mimeType:r,width:g,height:s,isMuted:m,length:c,lengthFormatted:u,...w}=a,f=t(r);if(!["image","video"].includes(f))throw new Error("Invalid media type.");const p=g&&s,v={};if("video"===f&&(!p||null===m||null===c||null===u)){const t=await e(l);await i(t),v.width=t.videoWidth,v.height=t.videoHeight;const o=h(t);v.length=o.length,v.lengthFormatted=o.lengthFormatted,v.isMuted=!n(t)}if("image"===f&&!p){const t=await o(l);v.width=t.width,v.height=t.height}return d({type:f,width:g,height:s,isMuted:m,length:c,lengthFormatted:u,src:l,isExternal:!0,mimeType:r,...w,...v})}export{a as default};
