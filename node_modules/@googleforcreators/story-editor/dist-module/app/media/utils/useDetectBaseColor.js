/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useCallback as o}from"@googleforcreators/react";import{getSmallestUrlForWidth as t}from"@googleforcreators/media";import"react";import"prop-types";import"@googleforcreators/templates";import"../../config/context.js";import r from"../../config/useConfig.js";import"../../api/context.js";import e from"../../api/useAPI.js";import"../../../constants/fonts.js";import"../../../constants/multipleValue.js";import"@googleforcreators/animation";import"uuid";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"../../story/context.js";import"@googleforcreators/migration";import"../../history/historyProvider.js";import"../../history/context.js";import"../../story/actions/useSaveStory.js";import"clone-deep";import"../../story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../../story/storyTriggers/storyTriggersProvider.js";import"../../story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../../story/storyTriggers/storyEvents/onPageAddedRegister.js";import s from"../../story/useStory.js";import i from"../../../utils/getMediaBaseColor.js";import a from"../../../utils/useCORSProxy.js";function p(p){let{updateMediaElement:m}=p;const{actions:{updateMedia:n,getPosterMediaById:c}}=e(),{updateElementsByResourceId:l}=s((o=>({updateElementsByResourceId:o.actions.updateElementsByResourceId}))),{capabilities:{hasUploadMediaAction:g}}=r(),{getProxiedUrl:d}=a(),u=o((async(o,t)=>{let{id:r,isExternal:e}=o;try{l({id:r,properties:o=>{let{resource:r}=o;return{resource:{...r,baseColor:t}}}}),e||(m({id:r,data:{baseColor:t}}),g&&await n(r,{baseColor:t}))}catch(o){}}),[l,m,g,n]);return{updateBaseColor:o((async o=>{const{type:r,poster:e,id:s,isExternal:a}=o;let p=e;if("image"===r)p=t(0,o);else if(!a){const o=c?await c(s):null;o&&(p=t(0,o))}if(!p)return;const m=d(o,p);try{const t=await i(m);await u(o,t)}catch(o){}}),[d,c,u])}}export{p as default};
