/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useCallback as r}from"@googleforcreators/react";import{getSmallestUrlForWidth as o}from"@googleforcreators/media";import{trackError as t}from"@googleforcreators/tracking";import"react";import"prop-types";import"@googleforcreators/templates";import"../../config/context.js";import e from"../../config/useConfig.js";import"../../api/context.js";import s from"../../api/useAPI.js";import"../../../constants/fonts.js";import"../../../constants/multipleValue.js";import"@googleforcreators/animation";import"uuid";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"../../story/context.js";import"@googleforcreators/migration";import"../../history/historyProvider.js";import"../../history/context.js";import"../../story/actions/useSaveStory.js";import"clone-deep";import"../../story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../../story/storyTriggers/storyTriggersProvider.js";import"../../story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../../story/storyTriggers/storyEvents/onPageAddedRegister.js";import i from"../../story/useStory.js";import a from"../../../utils/useCORSProxy.js";import m from"../../../utils/getBlurHashFromImage.js";function p(p){let{updateMediaElement:n}=p;const{actions:{updateMedia:c,getPosterMediaById:l}}=s(),{updateElementsByResourceId:g}=i((r=>({updateElementsByResourceId:r.actions.updateElementsByResourceId}))),{capabilities:{hasUploadMediaAction:u}}=e(),{getProxiedUrl:d}=a(),y=r((async(r,o)=>{try{g({id:r,properties:r=>{let{resource:t}=r;return{resource:{...t,blurHash:o}}}}),n({id:r,data:{blurHash:o}}),u&&await c(r,{blurHash:o})}catch(r){}}),[g,n,u,c]);return{updateBlurHash:r((async r=>{let{resource:e}=r;const{type:s,poster:i,id:a,isExternal:p}=e;let n=i;if("image"===s)n=o(300,e);else if(!p){const r=l?await l(a):null;r&&(n=o(300,r))}if(!n)return;const c=d(e,n);try{const r=await m(c);await y(e.id,r)}catch(r){t("blurhash_generation",r?.message)}}),[d,l,y])}}export{p as default};
