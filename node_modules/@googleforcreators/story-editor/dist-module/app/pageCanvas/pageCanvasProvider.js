/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import"prop-types";import{useRef as t,useCallback as r}from"@googleforcreators/react";import o from"../../utils/storyPageToCanvas.js";import{getAccessibleTextColorsFromPixels as a}from"../../utils/contrastUtils.js";import s from"../../utils/useIdleTaskQueue.js";import{STABLE_ARRAY as n}from"../../constants/index.js";import"@googleforcreators/animation";import"uuid";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"../story/context.js";import"@googleforcreators/migration";import"@googleforcreators/templates";import"../config/context.js";import"../api/context.js";import"../history/historyProvider.js";import"../history/context.js";import"../story/actions/useSaveStory.js";import"clone-deep";import"../story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../story/storyTriggers/storyTriggersProvider.js";import"../story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../story/storyTriggers/storyEvents/onPageAddedRegister.js";import i from"../story/useStory.js";import c from"./context.js";import l from"./getPixelDataFromCanvas.js";import g from"./usePageCanvasMap.js";import m from"./usePageSnapshot.js";import p from"./pageCanvasCacheValidator.js";import u from"./getPageWithoutSelection.js";function PageCanvasProvider(d){let{children:v}=d;const y=s(),[f,P]=g(),{getSnapshotCanvas:j,setSnapshot:C}=m(),S=i((e=>{let{state:t}=e;return t.pages.map((e=>{let{id:t}=e;return t}))})),{currentPage:h,singleElementSelection:E}=i((e=>{let{state:t}=e;return{singleElementSelection:1===t.selectedElementIds?.length?t.selectedElementIds:n,currentPage:t.currentPage}})),x={currentPageValue:h,pageCanvasMapValue:f,singleElementSelectionValue:E},V=t(x);V.current=x;const I=r((e=>{let[t,r]=e;return y([t,async()=>{const e=await o(r,{});P.setPageCanvas({pageId:r.id,canvas:e})}])}),[y,P]),T=r((()=>{const{currentPageValue:e,pageCanvasMapValue:t}=V.current;t[e.id]||I([e.id,e])}),[I]),w=r((async(e,t)=>{const r=u(e,t);let a=j(r);return a||(a=await o(r,{}),C({page:r,canvas:a})),a}),[C,j]),M=r((async e=>{const{pageCanvasMapValue:t}=V.current;let r=t[e.id];return r||(r=await o(e,{}),P.setPageCanvas({pageId:e.id,canvas:r})),r}),[P]),R=r((async e=>{const{currentPageValue:t,singleElementSelectionValue:r}=V.current;let o;o=r.includes(e.id)?await w(t,r):await M(t);const{fontSize:s}=e,n=l(o,e);return a(n,s)}),[w,M]);return e.createElement(c.Provider,{value:{state:{pageCanvasMap:f},actions:{calculateAccessibleTextColors:R,generateDeferredPageCanvas:I,generateDeferredCurrentPageCanvas:T}}},S.map((t=>e.createElement(p,{key:t,pageId:t,clearPageCanvasCache:P.clearPageCanvas}))),v)}export{PageCanvasProvider as default};
