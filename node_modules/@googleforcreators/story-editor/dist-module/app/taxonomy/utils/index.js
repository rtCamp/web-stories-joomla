/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function e(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.reduce(((e,t)=>{let[n,r]=t;return e[n]=r,e}),{})}function t(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>e;return e(Object.entries(t).map((e=>{let[t,r]=e;return[t,n(r)]})))}function n(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>e;return e(Object.entries(t).map((e=>{let[t,r]=e;return[n(t),r]})))}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.entries(e).reduce(((e,t)=>{let[n,r]=t;return e[n]={...r,...e[n]},e}),{...t})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;return e.reduce(((e,n)=>(e[n[t]]=n,e)),{})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.reduce(((e,t)=>((t||[]).forEach((t=>{e[t.taxonomy]=e[t.taxonomy]||{},e[t.taxonomy][t.slug]=t})),e)),{})}export{l as cacheFromEmbeddedTerms,o as dictionaryOnKey,n as mapObjectKeys,t as mapObjectVals,r as mergeNestedDictionaries,e as objectFromEntries};
