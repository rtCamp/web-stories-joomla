/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import r from"react";import{useReduction as e,useRef as o,useCallback as t}from"@googleforcreators/react";import"prop-types";import u from"./context.js";import c,{INITIAL_STATE as n}from"./reduction.js";import p from"./keyBindings.js";function EditLayerFocusManager(s){let{children:i}=s;const[a,m]=e(n,c),l=o(a);l.current=a;const f=t((r=>{let{groupId:e,cleanup:o}=r;const t=l.current.focusGroups?.[e]?.[0];if(t){const[,r]=t;r.focus()}m.setActiveGroup({groupId:e,cleanup:o})}),[m,l]),d=t((()=>{l.current.cleanup?.(),m.clearActiveGroup()}),[m,l]),G=a.focusGroups[a.activeGroupKey];return r.createElement(u.Provider,{value:{enterFocusGroup:f,exitCurrentFocusGroup:d,actions:m}},G?.map((e=>{let[o,t]=e;return t&&r.createElement(p,{key:o,uuid:o,node:t,activeFocusGroup:G,exitCurrentFocusGroup:d})})),i)}export{EditLayerFocusManager as default};
