/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import o from"react";import"prop-types";import t,{css as e}from"styled-components";import{hasOpacity as r,hasGradient as l,generatePatternStyles as n}from"@googleforcreators/patterns";import{themeHelpers as i,Swatch as a,Icons as s}from"@googleforcreators/design-system";import{useRef as c}from"@googleforcreators/react";import{__,sprintf}from"@googleforcreators/i18n";import d from"../../utils/useRovingTabIndex/index.js";import p from"../tooltip/tooltip.js";import m from"./colorAdd.js";function f(){return f=Object.assign||function(o){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(o[r]=e[r])}return o},f.apply(this,arguments)}const u=e(["",";"],(o=>{let{theme:t}=o;return i.focusableOutlineCSS(t.colors.border.focus,t.colors.bg.secondary)})),g=t.div.attrs({role:"listbox"}).withConfig({displayName:"basicColorList__SwatchList",componentId:"sc-10h6tzp-0"})(["display:flex;max-width:100%;flex-wrap:wrap;gap:6px;"]),b=t(a).attrs((o=>{let{isSelected:t}=o;return{role:"option","aria-selected":t}})).withConfig({displayName:"basicColorList__StyledSwatch",componentId:"sc-10h6tzp-1"})(["",";",""],u,(o=>{let{isSelected:t,theme:r}=o;return t&&e(["border:2px solid ",";"],r.colors.border.defaultActive)}));function h(o){if(!o)return"";const t=n(o);return t.backgroundColor||t.backgroundImage}function ConditionalTooltip(t){let{tooltip:e,children:r}=t;return e?o.createElement(p,{title:e},r):r}function BasicColorList(t){let{color:e,colors:n,handleClick:i,allowsOpacity:a,allowsGradient:p,isLocal:u=!1,isGlobal:y=!1,isEditMode:w,changedStyle:C,...x}=t;const k=h(e),E=c(null);d({ref:E});const S=n.map(h).findIndex((o=>k===o));let L=0;const v=__(u?"local":"global","web-stories"),I="background"===C;return o.createElement(o.Fragment,null,n.length>0&&o.createElement(g,f({ref:E},x),n.map(((t,e)=>{const n=!a&&r(t),c=!p&&l(t),d=(n||c)&&!w;let m=null;d&&!w&&(m=__(n?"Page background colors cannot have an opacity.":"Gradient not allowed for Text","web-stories"));const f=h(t),g=w?sprintf(
/* translators: First %s is the color type, second %s is the color as a string */
__("Delete %1$s color: %2$s","web-stories"),v,f):f,y=k===f;let C=e===L?0:-1;return S>=0?C=y?0:-1:d&&e===L&&(L++,C=-1),o.createElement(ConditionalTooltip,{key:f,tooltip:m},o.createElement(b,{onClick:()=>i(t,u),pattern:t,isSelected:y,isDisabled:d,tabIndex:C,title:g},w&&o.createElement(s.Cross,null)))})),(u||y)&&o.createElement(m,{isLocal:u,isGlobal:y,isBackground:I})),!n.length&&(u||y)&&o.createElement(m,{isLocal:u,isGlobal:y,isBackground:I}))}export{BasicColorList as default};
