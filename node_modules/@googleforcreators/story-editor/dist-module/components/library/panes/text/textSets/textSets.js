/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import e from"react";import{useRef as t,useMemo as r,useCallback as i}from"@googleforcreators/react";import"prop-types";import{useVirtual as o}from"react-virtual";import{__}from"@googleforcreators/i18n";import{UnitsProvider as a}from"@googleforcreators/units";import{PANEL_GRID_ROW_GAP as s,VirtualizedWrapper as n,VirtualizedContainer as m}from"../../shared/virtualizedPanelGrid/components.js";import{getVirtualizedItemIndex as l}from"../../shared/virtualizedPanelGrid/getVirtualizedItemIndex.js";import d from"../../shared/virtualizedPanelGrid/useVirtualizedGridNavigation.js";import c from"./textSet.js";import{TEXT_SET_PAGE_SIZE as p}from"./constants.js";import{TEXT_SET_SIZE as u}from"../../../../../constants/index.js";function TextSets(f){let{paneRef:g,filteredTextSets:h}=f;const x=t(),z=t({}),I=r((()=>h.map((e=>e.id))),[h]),v=o({size:Math.ceil((h||[]).length/2),parentRef:g,estimateSize:i((()=>u+s),[]),overscan:4}),S=o({horizontal:!0,size:2,parentRef:g,estimateSize:i((()=>u+s),[]),overscan:0}),{activeGridItemId:G,handleGridFocus:j,handleGridItemFocus:F,isGridFocused:R}=d({rowVirtualizer:v,containerRef:x,gridItemRefs:z,gridItemIds:I});return e.createElement(a,{pageSize:p},e.createElement(n,{height:v.totalSize},e.createElement(m,{height:v.totalSize,ref:x,columnWidth:u,rowHeight:u,onFocus:j,role:"group","aria-label":__("Text Set Options","web-stories")},v.virtualItems.map((t=>S.virtualItems.map((r=>{const i=l({columnIndex:r.index,rowIndex:t.index}),o=h[i];if(!o?.elements)return null;const a=G===o.id&&R;return e.createElement(c,{key:i,id:o.id,"data-testid":`text_set_${o.id}`,ref:e=>z.current[o.id]=e,translateY:t.start,translateX:r.start,"aria-label":o.title,isActive:a,onFocus:()=>F(o.id),elements:o.elements,index:i})})))))))}export{TextSets as default};
