/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import t from"react";import{forwardRef as e,useCallback as o}from"@googleforcreators/react";import"prop-types";import{stripHTML as r}from"@googleforcreators/dom";import{trackEvent as s}from"@googleforcreators/tracking";import"@googleforcreators/transform";import"../dropTargets/provider.js";import"../dropTargets/context.js";import"../../app/history/historyProvider.js";import"../../app/history/context.js";import"@googleforcreators/templates";import"../../app/config/context.js";import"../../app/api/context.js";import"@googleforcreators/fonts";import"../../constants/fonts.js";import"../../constants/multipleValue.js";import"../../app/font/context.js";import p from"../../app/font/useFont.js";import"@googleforcreators/media";import"@googleforcreators/animation";import"uuid";import"@googleforcreators/masks";import"@googleforcreators/element-library";import"@googleforcreators/elements";import"../../app/story/context.js";import"@googleforcreators/migration";import"../../app/story/actions/useSaveStory.js";import"clone-deep";import"../../app/story/useStoryReducer/useStoryReducer.js";import"@googleforcreators/output";import"../../app/story/storyTriggers/storyTriggersProvider.js";import"../../app/story/storyTriggers/storyEvents/onInitialElementAddedRegister.js";import"../../app/story/storyTriggers/storyEvents/onPageAddedRegister.js";import i from"../../app/story/useStory.js";import"@googleforcreators/i18n";import"../../app/media/useUploadMedia.js";import"@googleforcreators/patterns";import"../../utils/generateBlurhash.worker.js";import"@googleforcreators/design-system";import"../../app/media/media3p/providerConfiguration.js";import"../../app/media/utils/useFFmpeg.js";import"../../app/media/media3p/api/context.js";import"../../app/media/local/constants.js";import"../../app/media/media3p/providerReducer.js";import"../../app/media/context.js";import"sat";import"@googleforcreators/units";import"../../app/layout/context.js";import"../../app/layout/useZoomSetting.js";import"@googleforcreators/rich-text";import"@googleforcreators/stickers";import"../library/panes/text/textPresets.js";import"../../app/canvas/context.js";import"../../app/currentUser/context.js";import"../../app/helpCenter/provider.js";import"../../app/helpCenter/context.js";import"../helpCenter/constants.js";import"../../app/rightClickMenu/context.js";import a from"../../utils/getUpdatedSizeAndPosition.js";import n from"../panels/design/textStyle/useRichTextFormatting.js";import m from"../panels/design/textStyle/getClosestFontWeight.js";import"../panels/shared/flipControls.js";import"../panels/shared/linkRelations.js";import l from"../panels/shared/getCommonValue.js";import c from"../fontPicker/index.js";import g from"../design/updateProperties.js";function d(){return d=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])}return t},d.apply(this,arguments)}const f=e((function StoryFontPicker(e,f){let{...u}=e;const{updateSelectedElements:j,selectedElements:y}=i((t=>{let{state:e,actions:o}=t;return{updateSelectedElements:o.updateSelectedElements,selectedElements:e.selectedElements}})),h=o(((t,e)=>{j({properties:o=>{const r=g(o,t,e),s=a({...o,...r});return{...r,...s}}})}),[j]),{textInfo:{fontWeight:x,isItalic:S},handlers:{handleResetFontWeight:v}}=n(y,h),{addRecentFont:E,maybeEnqueueFontStyle:F}=p((t=>{let{actions:e}=t;return{addRecentFont:e.addRecentFont,maybeEnqueueFontStyle:e.maybeEnqueueFontStyle}})),R=l(y,(t=>{let{font:e}=t;return e?.family})),C=S?"italic":"normal",P=o((async t=>{const{id:e,name:o,value:p,...i}=t;s("font_family_changed",{name:o}),await F(y.map((t=>{let{content:e}=t;return{font:i,fontStyle:C,fontWeight:x,content:r(e)}}))),E(t),h({font:i},!0);const a=m(400,i.weights);await v(a)}),[E,C,x,F,h,y,v]);return t.createElement(c,d({onChange:P,currentValue:R},u,{ref:f}))}));export{f as default};
