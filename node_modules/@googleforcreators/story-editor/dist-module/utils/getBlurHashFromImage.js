/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{preloadImage as e}from"@googleforcreators/media";import{getTimeTracker as t,trackError as r}from"@googleforcreators/tracking";import a from"./generateBlurhash.worker.js";const o=async o=>{let n;try{n=await e({src:o})}catch{return Promise.reject(new Error("Failed to get blurhash from image"))}const s=(e=>{const{width:t,height:r}=e,a=document.createElement("canvas");a.width=t,a.height=r;const o=a.getContext("2d");return o.drawImage(e,0,0),o.getImageData(0,0,t,r)})(n),{data:i,width:g,height:h}=s,m=t("load_get_blurhash");return new Promise(((e,t)=>{const o=new a;o.postMessage({image:i,width:g,height:h,componentX:4,componentY:4}),o.addEventListener("message",(function(a){o.terminate(),m(),"success"===a.data.type?e(a.data.blurHash):(r("blurhash_generation",a.data.error?.message),t(a.data.error))})),o.addEventListener("error",(e=>{o.terminate(),m(),r("blurhash_generation",e?.message),t(e)}))}))};export{o as default};
