/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{getTimeTracker as o,trackError as r}from"@googleforcreators/tracking";import{getHexFromSolidArray as t}from"@googleforcreators/patterns";import{preloadImage as e}from"@googleforcreators/media";async function a(o){const{default:e}=await import("colorthief");return new Promise(((a,i)=>{try{const r=(new e).getColor(o);a(t(r))}catch(o){r("image_base_color",o.message),i(o)}}))}async function i(r){let t,i,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"auto";if(!r)throw new Error("No source to image");const n=o("load_get_base_color");try{i=await e({src:r,width:c,height:f}),t=await a(i)}catch(o){if("TypeError"!==o?.name)throw o;t="#ffffff"}finally{i?.remove(),n()}return t}export{i as default};
