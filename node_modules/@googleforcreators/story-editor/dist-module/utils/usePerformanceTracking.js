/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{useEffect as e}from"@googleforcreators/react";import{trackTiming as t}from"@googleforcreators/tracking";const r={},o=["click","pointerdown","pointerup"];let n;function a(a){let{node:i,eventData:s,eventType:c="click"}=a;const m="undefined"!=typeof PerformanceObserver&&PerformanceObserver.supportedEntryTypes.includes("event");!n&&m&&(n=new PerformanceObserver((e=>{for(const n of e.getEntries())o.includes(n.name)&&r[n.startTime]?.category&&!r[n.startTime]?.isReported&&(r[n.startTime].isReported=!0,t(r[n.startTime].category,n.duration,r[n.startTime].label,n.name))})),n.observe({entryTypes:["event"]}));const{label:p,category:l}=s;e((()=>{if(!i||!m)return;const e=i,t=e=>{r[e.timeStamp]={category:l,time:e.timeStamp},p&&(r[e.timeStamp].label=p)};return e.addEventListener(c,t),()=>{e.removeEventListener(c,t)}}),[l,p,i,c,m])}export{a as default};
