/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("@googleforcreators/react"),t=require("@googleforcreators/media"),r=require("../../api/useAPI.js"),o=require("../../story/useStory.js");module.exports=function(i){let{uploadMedia:a,postProcessingResource:s,updateMedia:d,deleteMediaElement:c}=i;const{actions:{getOptimizedMediaById:l,getMutedMediaById:u}}=r(),{updateElementsByResourceId:n,updateElementById:m}=o((e=>({updateElementsByResourceId:e.actions.updateElementsByResourceId,updateElementById:e.actions.updateElementById}))),p=e.useCallback((e=>{let{oldResource:t,resource:r}=e;const{id:o,alt:i}=t;n({id:o,properties:()=>({type:r.type,resource:{...r,alt:i}})})}),[n]),y=e.useCallback((e=>{let{elementId:t,oldResource:r,resource:o}=e;const{alt:i}=r;m({elementId:t,properties:()=>({type:o.type,resource:{...o,alt:i}})})}),[m]),I=e.useCallback(((e,t)=>{m({elementId:e,properties:e=>({resource:{...e.resource,...t}})})}),[m]),g=e.useCallback(((e,t)=>{n({id:e,properties:e=>({resource:{...e.resource,...t}})})}),[n]),R=e.useCallback(((e,t,r)=>{d(e,{mediaSource:r,optimizedId:t})}),[d]),f=e.useCallback(((e,t)=>{d(e,{mutedId:t})}),[d]),w=e.useCallback((e=>{let{resource:r}=e;const{id:o,src:i,mimeType:d}=r,u=()=>g(o,{isOptimized:!1}),n=e=>{let{resource:t}=e;p({oldResource:r,resource:t}),R(o,t.id,"source-video"),c({id:o}),s(t)},m=e=>{let{resource:t}=e;const i={...t,id:r.id};g(o,{...i})};(async()=>{const e=await l(o);if(e)return void g(o,e);let s=!1;try{s=await t.fetchRemoteFile(i,d)}catch(e){return}await a([s],{onUploadSuccess:n,onUploadError:u,onUploadProgress:m,additionalData:{originalId:r.id,isMuted:r.isMuted},originalResourceId:r.id})})()}),[g,p,R,c,s,l,a]),b=e.useCallback((e=>{let{resource:r,canvasResourceId:o,elementId:i,start:d,end:c}=e;const{id:l,...u}=r,{src:n,mimeType:m,poster:p,isMuted:g,isOptimized:R}=r,f={original:l,start:d,end:c},w=()=>I(i,{trimData:f}),b=()=>I(i,{trimData:r.trimData||{}}),h=e=>{let{resource:t}=e;const a={alt:r.alt,id:o};y({elementId:i,oldResource:a,resource:t}),s(t)},E=e=>{let{resource:t}=e;const r={...t,id:o};I(i,{...r})};return(async()=>{let e=!1,r=!1;try{e=await t.fetchRemoteFile(n,m)}catch(e){return}if(p)try{r=await t.fetchRemoteBlob(p)}catch(e){}await a([e],{onUploadSuccess:h,onUploadStart:w,onUploadError:b,onUploadProgress:E,additionalData:{originalId:l,isMuted:g,mediaSource:R?"video-optimization":"editor"},elementId:i,trimData:f,resource:{...u,trimData:f},originalResourceId:o,posterFile:r})})()}),[I,y,s,a]),h=e.useCallback((e=>{let{resource:r}=e;const{id:o,...i}=r,{src:d,mimeType:c,poster:l,isOptimized:n}=r,m=()=>{g(o,{isMuted:!1})},y=e=>{let{resource:t}=e;p({oldResource:r,resource:t}),f(r.id,t.id),s(t)},I=e=>{let{resource:t}=e;const i={...t,id:r.id};g(o,{...i})};(async()=>{const e=await u(o);if(e)return void g(o,e);let r=!1,s=!1;try{r=await t.fetchRemoteFile(d,c)}catch(e){return}if(l)try{s=await t.fetchRemoteBlob(l)}catch(e){}await a([r],{onUploadSuccess:y,onUploadError:m,onUploadProgress:I,additionalData:{originalId:o,mediaSource:n?"video-optimization":"editor"},muteVideo:!0,resource:{...i,isMuted:!0},originalResourceId:o,posterFile:s})})()}),[g,p,f,s,u,a]);return{optimizeVideo:w,optimizeGif:e.useCallback((e=>{let{resource:r}=e;const{id:o,src:i,mimeType:d}=r,l=e=>{let{resource:t}=e;p({oldResource:r,resource:t}),R(r.id,t.id,"source-image"),c({id:r.id}),s(t)},u=e=>{let{resource:t}=e;const i={...t,id:r.id};g(o,{...i})};return(async()=>{let e=!1;try{e=await t.fetchRemoteFile(i,d)}catch(e){return}const r=await e.arrayBuffer();t.isAnimatedGif(r)&&await a([e],{onUploadSuccess:l,onUploadProgress:u,additionalData:{original_id:o},originalResourceId:o})})()}),[p,R,c,s,g,a]),muteExistingVideo:h,trimExistingVideo:b}};
