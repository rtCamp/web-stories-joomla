/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.INITIAL_STATE={activeGroupKey:null,cleanup:null,focusGroups:{}},exports.default={addNodeToGroup:(o,e)=>{const{groupId:u,nodeTuple:r}=e.payload,p=o.focusGroups[u]||[];let s=[];const c=p.findIndex((o=>o[0]===r[0]));return s=-1===c?[...p,r]:[...p.slice(0,c),r,...p.slice(0,c+1)],{...o,focusGroups:{...o.focusGroups,[u]:s}}},removeNodeFromGroup:(o,e)=>{const{groupId:u,nodeTuple:r}=e.payload,p=(o.focusGroups[u]||[]).filter((o=>o[0]!==r[0]));return{...o,focusGroups:{...o.focusGroups,[u]:p}}},setActiveGroup:(o,e)=>{const{groupId:u,cleanup:r}=e.payload;return{...o,activeGroupKey:u,cleanup:r}},clearActiveGroup:o=>({...o,activeGroupKey:null,cleanup:null})};
