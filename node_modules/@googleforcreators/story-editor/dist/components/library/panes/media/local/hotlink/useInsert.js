/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("@googleforcreators/react"),r=require("@googleforcreators/i18n"),t=require("@googleforcreators/media"),i=require("uuid"),s=require("@googleforcreators/tracking"),o=require("../../../../useLibrary.js"),a=require("../../../../../../app/media/utils/getResourceFromUrl.js");require("../../../../../../constants/fonts.js"),require("../../../../../../constants/multipleValue.js");var n=require("../../../../../../app/media/utils/getPosterName.js");require("../../../../../../app/media/media3p/providerConfiguration.js"),require("react"),require("prop-types"),require("@googleforcreators/templates"),require("../../../../../../app/config/context.js");var l=require("../../../../../../app/config/useConfig.js");require("../../../../../../app/api/context.js");var u=require("../../../../../../app/api/useAPI.js"),c=require("../../../../../../app/media/utils/useUploadVideoFrame.js");require("../../../../../../app/media/utils/useFFmpeg.js");var p=require("../../../../../../utils/useCORSProxy.js"),d=require("../../../../../../app/media/utils/useDetectBaseColor.js"),g=require("./utils.js");module.exports=function(m){let{link:f,setLink:q,setErrorMsg:y,onClose:h}=m;const{insertElement:v}=o((e=>({insertElement:e.actions.insertElement}))),{capabilities:{hasUploadMediaAction:j},allowedMimeTypes:{image:k,vector:w,video:_}}=l(),x=e.useMemo((()=>[...k,...w,..._]),[k,w,_]),E=e.useMemo((()=>x.map((e=>t.getExtensionsFromMimeType(e))).flat()),[x]),{actions:{getHotlinkInfo:I}}=u(),{updateBaseColor:F}=d({}),[M,V]=e.useState(!1),{uploadVideoPoster:b}=c({}),{getProxiedUrl:C,checkResourceAccess:P}=p(),T=e.useCallback((async(e,r)=>{const{ext:s,type:o,mimeType:l,fileName:u}=e,c="video"===o;try{const e=r?C({needsProxy:r},f):f,p={id:i.v4(),src:e,mimeType:l,needsProxy:r,alt:u};if(c){const r=await t.preloadVideo(e);await t.seekVideo(r),p.width=r.videoWidth,p.height=r.videoHeight;const i=t.getVideoLength(r);if(p.length=i.length,p.lengthFormatted=i.lengthFormatted,p.isMuted=!t.hasVideoGotAudio(r),j)try{const e=n(u.replace(`.${s}`,"")),i=await t.getImageFromVideo(r),o=await b(0,e,i);p.poster=o.poster,p.posterId=o.posterId}catch{}}const d=await a(p);d.src=f,v(o,{resource:d}),F(d),y(null),q(""),h()}catch(e){y(g.getErrorMessage())}finally{V(!1)}}),[j,v,f,h,y,q,b,C,F]);return{onInsert:e.useCallback((async()=>{if(f)if(g.isValidUrlForHotlinking(f)){V(!0);try{const e=await I(f),r=await P(f);s.trackEvent("hotlink_media",{event_label:f,file_size:e.fileSize,file_type:e.mimeType,needs_proxy:r}),await T(e,r)}catch(e){V(!1),s.trackError("hotlink_media",e?.message);let t=r.__("No file types are currently supported.","web-stories");E.length&&(t=r.sprintf(
/* translators: %s is a list of allowed file extensions. */
r.__("You can insert %s.","web-stories"),r.translateToExclusiveList(E))),y(g.getErrorMessage(e.code,t))}}else y(r.__("Invalid link.","web-stories"))}),[E,f,I,y,T,P]),isInserting:M,setIsInserting:V}};
