/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("@googleforcreators/media"),r=require("@googleforcreators/tracking"),t=require("./generateBlurhash.worker.js");module.exports=async a=>{let o;try{o=await e.preloadImage({src:a})}catch{return Promise.reject(new Error("Failed to get blurhash from image"))}const s=(e=>{const{width:r,height:t}=e,a=document.createElement("canvas");a.width=r,a.height=t;const o=a.getContext("2d");return o.drawImage(e,0,0),o.getImageData(0,0,r,t)})(o),{data:n,width:i,height:g}=s,c=r.getTimeTracker("load_get_blurhash");return new Promise(((e,a)=>{const o=new t;o.postMessage({image:n,width:i,height:g,componentX:4,componentY:4}),o.addEventListener("message",(function(t){o.terminate(),c(),"success"===t.data.type?e(t.data.blurHash):(r.trackError("blurhash_generation",t.data.error?.message),a(t.data.error))})),o.addEventListener("error",(e=>{o.terminate(),c(),r.trackError("blurhash_generation",e?.message),a(e)}))}))};
