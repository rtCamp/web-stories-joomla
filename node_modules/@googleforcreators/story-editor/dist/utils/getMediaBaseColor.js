/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

"use strict";var e=require("@googleforcreators/tracking"),r=require("@googleforcreators/patterns"),t=require("@googleforcreators/media");function o(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}async function a(t){const{default:a}=await Promise.resolve().then((function(){return o(require("colorthief"))}));return new Promise(((o,n)=>{try{const e=(new a).getColor(t);o(r.getHexFromSolidArray(e))}catch(r){e.trackError("image_base_color",r.message),n(r)}}))}module.exports=async function(r){let o,n,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"auto";if(!r)throw new Error("No source to image");const f=e.getTimeTracker("load_get_base_color");try{n=await t.preloadImage({src:r,width:c,height:i}),o=await a(n)}catch(e){if("TypeError"!==e?.name)throw e;o="#ffffff"}finally{n?.remove(),f()}return o};
