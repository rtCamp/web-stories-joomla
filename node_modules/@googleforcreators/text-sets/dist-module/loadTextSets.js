/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import{migrate as t}from"@googleforcreators/migration";async function e(e){const n=await function __variableDynamicImportRuntime0__(t){switch(t){case"./raw/contact.json":return import("./raw/contact.json.js");case"./raw/cover.json":return import("./raw/cover.json.js");case"./raw/editorial.json":return import("./raw/editorial.json.js");case"./raw/list.json":return import("./raw/list.json.js");case"./raw/quote.json":return import("./raw/quote.json.js");case"./raw/section_header.json":return import("./raw/section_header.json.js");case"./raw/step.json":return import("./raw/step.json.js");case"./raw/table.json":return import("./raw/table.json.js");default:return new Promise((function(e,n){("function"==typeof queueMicrotask?queueMicrotask:setTimeout)(n.bind(null,new Error("Unknown variable dynamic import: "+t)))}))}}(`./raw/${e}.json`);return t(n.default,n.default.version).pages.reduce(((t,n)=>{const r={minX:1/0,maxX:0,minY:1/0,maxY:0},a=n.elements.filter((t=>!t.isBackground&&Boolean(function(t,e){return t.minX=Math.min(t.minX,e.x),t.maxX=Math.max(t.maxX,e.x+e.width),t.minY=Math.min(t.minY,e.y),t.maxY=Math.max(t.maxY,e.y+e.height),t}(r,t))));return[...t,{textSetFonts:n.fonts,id:n.id,textSetCategory:e,elements:a.map((t=>({...t,normalizedOffsetX:t.x-r.minX,normalizedOffsetY:t.y-r.minY,textSetWidth:r.maxX-r.minX,textSetHeight:r.maxY-r.minY})))}]}),[])}async function n(){const t=await Promise.all(["cover","step","section_header","editorial","contact","table","list","quote"].map((async t=>[t,await e(t)])));return Object.fromEntries(t)}export{n as default};
