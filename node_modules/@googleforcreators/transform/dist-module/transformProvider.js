/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import r from"react";import"prop-types";import{useRef as e,useState as t,useCallback as n}from"@googleforcreators/react";import o from"./context.js";function TransformProvider(a){let{children:c}=a;const i=e({}),l=e({}),[u,f]=t(!1),m={state:{isAnythingTransforming:u},actions:{registerTransformHandler:n(((r,e)=>{const t=i.current,n=t[r]||(t[r]=[]);return n.push(e),()=>{n.splice(n.indexOf(e),1)}}),[]),pushTransform:n(((r,e)=>{const t=i.current,n=l.current,o=t[r];if(o&&o.forEach((r=>r(e))),n[r]=null===e?null:{...n[r],...e},s(n[r])){Object.values(n).every(s)&&(l.current={},f(!1))}else e.staticTransformation||f(!0)}),[]),clearTransforms:n((()=>{l.current={},f(!1)}),[f])}};return r.createElement(o.Provider,{value:m},c)}const s=r=>{if(null===r)return!0;return 1===Object.keys(r).length&&"dropTargets"in r};export{TransformProvider as default};
