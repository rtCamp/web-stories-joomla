import * as React from 'react';
declare type FeatureGroup = {
    [featureName: string]: boolean | FeatureGroup;
};
export declare type FeatureFlags = string[] | FeatureGroup;
export declare function FlagsProvider({ features, children, }: {
    features?: FeatureFlags;
    children: React.ReactNode;
}): JSX.Element;
export declare function useFeatures(): FeatureGroup;
export declare function useFeature(name: string): boolean | FeatureGroup;
export declare function Feature({ name, children, render, }: {
    name: string;
    children?: React.ReactNode | ((hasFeature: boolean | FeatureGroup) => JSX.Element);
    render?: React.ReactNode | ((hasFeature: boolean | FeatureGroup) => JSX.Element);
}): any;
export declare function withFeature(featureName: string): (Component: Function) => (props: React.ComponentProps<any>) => JSX.Element;
export {};
